#### Compiling MUF Program Untitled.muf(#4) ###########

#### Showing Tokens for Untitled.muf(#4) ##############
    0: Function: main (0 vars)
    1: 0
    2: ARRAY_MAKE
    3: 0
    4: ARRAY_PREV
    5: POP
    6: POP
    7: 0
    8: ARRAY_MAKE_DICT
    9: 0
   10: ARRAY_PREV
   11: POP
   12: POP
   13: {
   14: 5
   15: 4
   16: 3
   17: }
   18: ARRAY_MAKE
   19: DUP
   20: ARRAY_LAST
   21: JmpIfFalse: 26
   22: OVER
   23: SWAP
   24: ARRAY_PREV
   25: JMP: 21
   26: POP
   27: POP
   28: {
   29: "c"
   30: 5
   31: "b"
   32: 4
   33: "a"
   34: 3
   35: }
   36: 2
   37: /
   38: ARRAY_MAKE_DICT
   39: DUP
   40: ARRAY_LAST
   41: JmpIfFalse: 46
   42: OVER
   43: SWAP
   44: ARRAY_PREV
   45: JMP: 41
   46: POP
   47: POP
   48: EXIT

#### Executing Tokens #################################
    0: #4 line 1 ("") Function: main (0 vars)
    1: #4 line 2 ("") 0
    2: #4 line 2 ("", 0) ARRAY_MAKE
    3: #4 line 2 ("", 0[]) 0
    4: #4 line 2 ("", 0[], 0) ARRAY_PREV
    5: #4 line 2 ("", 0, 0) POP
    6: #4 line 2 ("", 0) POP
    7: #4 line 4 ("") 0
    8: #4 line 4 ("", 0) ARRAY_MAKE_DICT
    9: #4 line 4 ("", 0{}) 0
   10: #4 line 4 ("", 0{}, 0) ARRAY_PREV
   11: #4 line 4 ("", 0, 0) POP
   12: #4 line 4 ("", 0) POP
   13: #4 line 6 ("") {
   14: #4 line 6 ("", Mark) 5
   15: #4 line 6 ("", Mark, 5) 4
   16: #4 line 6 ("", Mark, 5, 4) 3
   17: #4 line 6 ("", Mark, 5, 4, 3) }
   18: #4 line 6 ("", 5, 4, 3, 3) ARRAY_MAKE
   19: #4 line 7 ("", 3[5, 4, 3]) DUP
   20: #4 line 7 ("", 3[5, 4, 3], 3[5, 4, 3]) ARRAY_LAST
   21: #4 line 9 ("", 3[5, 4, 3], 2, 1) JmpIfFalse: 26
   22: #4 line 10 ("", 3[5, 4, 3], 2) OVER
   23: #4 line 10 ("", 3[5, 4, 3], 2, 3[5, 4, 3]) SWAP
   24: #4 line 10 ("", 3[5, 4, 3], 3[5, 4, 3], 2) ARRAY_PREV
   25: #4 line 11 ("", 3[5, 4, 3], 1, 1) JMP: 21
   21: #4 line 9 ("", 3[5, 4, 3], 1, 1) JmpIfFalse: 26
   22: #4 line 10 ("", 3[5, 4, 3], 1) OVER
   23: #4 line 10 ("", 3[5, 4, 3], 1, 3[5, 4, 3]) SWAP
   24: #4 line 10 ("", 3[5, 4, 3], 3[5, 4, 3], 1) ARRAY_PREV
   25: #4 line 11 ("", 3[5, 4, 3], 0, 1) JMP: 21
   21: #4 line 9 ("", 3[5, 4, 3], 0, 1) JmpIfFalse: 26
   22: #4 line 10 ("", 3[5, 4, 3], 0) OVER
   23: #4 line 10 ("", 3[5, 4, 3], 0, 3[5, 4, 3]) SWAP
   24: #4 line 10 ("", 3[5, 4, 3], 3[5, 4, 3], 0) ARRAY_PREV
   25: #4 line 11 ("", 3[5, 4, 3], 0, 0) JMP: 21
   21: #4 line 9 ("", 3[5, 4, 3], 0, 0) JmpIfFalse: 26
   26: #4 line 12 ("", 3[5, 4, 3], 0) POP
   27: #4 line 12 ("", 3[5, 4, 3]) POP
   28: #4 line 14 ("") {
   29: #4 line 14 ("", Mark) "c"
   30: #4 line 14 ("", Mark, "c") 5
   31: #4 line 14 ("", Mark, "c", 5) "b"
   32: #4 line 14 ("", Mark, "c", 5, "b") 4
   33: #4 line 14 ("", Mark, "c", 5, "b", 4) "a"
   34: #4 line 14 ("", Mark, "c", 5, "b", 4, "a") 3
   35: #4 line 14 ("", Mark, "c", 5, "b", 4, "a", 3) }
   36: #4 line 14 ("", "c", 5, "b", 4, "a", 3, 6) 2
   37: #4 line 14 ("", "c", 5, "b", 4, "a", 3, 6, 2) /
   38: #4 line 14 ("", "c", 5, "b", 4, "a", 3, 3) ARRAY_MAKE_DICT
   39: #4 line 15 ("", 3{"a": 3, "b": 4, "c": 5}) DUP
   40: #4 line 15 ("", 3{"a": 3, "b": 4, "c": 5}, 3{"a": 3, "b": 4, "c": 5}) ARRAY_LAST
   41: #4 line 17 ("", 3{"a": 3, "b": 4, "c": 5}, "c", 1) JmpIfFalse: 46
   42: #4 line 18 ("", 3{"a": 3, "b": 4, "c": 5}, "c") OVER
   43: #4 line 18 ("", 3{"a": 3, "b": 4, "c": 5}, "c", 3{"a": 3, "b": 4, "c": 5}) SWAP
   44: #4 line 18 ("", 3{"a": 3, "b": 4, "c": 5}, 3{"a": 3, "b": 4, "c": 5}, "c") ARRAY_PREV
   45: #4 line 19 ("", 3{"a": 3, "b": 4, "c": 5}, "b", 1) JMP: 41
   41: #4 line 17 ("", 3{"a": 3, "b": 4, "c": 5}, "b", 1) JmpIfFalse: 46
   42: #4 line 18 ("", 3{"a": 3, "b": 4, "c": 5}, "b") OVER
   43: #4 line 18 ("", 3{"a": 3, "b": 4, "c": 5}, "b", 3{"a": 3, "b": 4, "c": 5}) SWAP
   44: #4 line 18 ("", 3{"a": 3, "b": 4, "c": 5}, 3{"a": 3, "b": 4, "c": 5}, "b") ARRAY_PREV
   45: #4 line 19 ("", 3{"a": 3, "b": 4, "c": 5}, "a", 1) JMP: 41
   41: #4 line 17 ("", 3{"a": 3, "b": 4, "c": 5}, "a", 1) JmpIfFalse: 46
   42: #4 line 18 ("", 3{"a": 3, "b": 4, "c": 5}, "a") OVER
   43: #4 line 18 ("", 3{"a": 3, "b": 4, "c": 5}, "a", 3{"a": 3, "b": 4, "c": 5}) SWAP
   44: #4 line 18 ("", 3{"a": 3, "b": 4, "c": 5}, 3{"a": 3, "b": 4, "c": 5}, "a") ARRAY_PREV
   45: #4 line 19 ("", 3{"a": 3, "b": 4, "c": 5}, 0, 0) JMP: 41
   41: #4 line 17 ("", 3{"a": 3, "b": 4, "c": 5}, 0, 0) JmpIfFalse: 46
   46: #4 line 20 ("", 3{"a": 3, "b": 4, "c": 5}, 0) POP
   47: #4 line 20 ("", 3{"a": 3, "b": 4, "c": 5}) POP
   48: #4 line 21 ("") EXIT
Program exited.
Execution completed in 71 steps.

