#### Compiling MUF Program cmd-test(#4) ###############

#### Showing Tokens for cmd-test(#4) ##################
    0: Function: main (0 vars)
    1: LV0: me
    2: @
    3: GETLOCKSTR
    4: POP
    5: LV0: me
    6: @
    7: "me|*jane_doe"
    8: SETLOCKSTR
    9: POP
   10: LV0: me
   11: @
   12: GETLOCKSTR
   13: POP
   14: LV0: me
   15: @
   16: LV0: me
   17: @
   18: LOCKED?
   19: POP
   20: #1
   21: LV0: me
   22: @
   23: LOCKED?
   24: POP
   25: "me|*jane_doe"
   26: PARSELOCK
   27: DUP
   28: UNPARSELOCK
   29: POP
   30: DUP
   31: PRETTYLOCK
   32: POP
   33: #1
   34: OVER
   35: TESTLOCK
   36: POP
   37: "jane_doe"
   38: PMATCH
   39: SWAP
   40: TESTLOCK
   41: POP
   42: EXIT

#### Executing Tokens #################################
loooock=<type 'NoneType'>
loooock=<class 'mufsim.stackitems.Lock'>
    0: #4 line 1 ("") Function: main (0 vars)
    1: #4 line 2 ("") LV0: me
    2: #4 line 2 ("", LV0) @
    3: #4 line 2 ("", #5) GETLOCKSTR
GETPROP "_/lok" on #5 = None
    4: #4 line 2 ("", "*UNLOCKED*") POP
    5: #4 line 3 ("") LV0: me
    6: #4 line 3 ("", LV0) @
    7: #4 line 3 ("", #5) "me|*jane_doe"
    8: #4 line 3 ("", #5, "me|*jane_doe") SETLOCKSTR
SETPROP "_/lok" on #5 = Lock:(#5|#6)
    9: #4 line 3 ("", 1) POP
   10: #4 line 4 ("") LV0: me
   11: #4 line 4 ("", LV0) @
   12: #4 line 4 ("", #5) GETLOCKSTR
GETPROP "_/lok" on #5 = Lock:(#5|#6)
   13: #4 line 4 ("", "(#5|#6)") POP
   14: #4 line 5 ("") LV0: me
   15: #4 line 5 ("", LV0) @
   16: #4 line 5 ("", #5) LV0: me
   17: #4 line 5 ("", #5, LV0) @
   18: #4 line 5 ("", #5, #5) LOCKED?
GETPROP "_/lok" on #5 = Lock:(#5|#6)
   19: #4 line 5 ("", 0) POP
   20: #4 line 6 ("") #1
   21: #4 line 6 ("", #1) LV0: me
   22: #4 line 6 ("", #1, LV0) @
   23: #4 line 6 ("", #1, #5) LOCKED?
GETPROP "_/lok" on #5 = Lock:(#5|#6)
   24: #4 line 6 ("", 1) POP
   25: #4 line 7 ("") "me|*jane_doe"
   26: #4 line 7 ("", "me|*jane_doe") PARSELOCK
   27: #4 line 8 ("", Lock:(#5|#6)) DUP
   28: #4 line 8 ("", Lock:(#5|#6), Lock:(#5|#6)) UNPARSELOCK
   29: #4 line 8 ("", Lock:(#5|#6), "(#5|#6)") POP
   30: #4 line 9 ("", Lock:(#5|#6)) DUP
   31: #4 line 9 ("", Lock:(#5|#6), Lock:(#5|#6)) PRETTYLOCK
   32: #4 line 9 ("", Lock:(#5|#6), "(John_Doe(#5)|Jane_Doe(#6))") POP
   33: #4 line 10 ("", Lock:(#5|#6)) #1
   34: #4 line 10 ("", Lock:(#5|#6), #1) OVER
   35: #4 line 10 ("", Lock:(#5|#6), #1, Lock:(#5|#6)) TESTLOCK
   36: #4 line 10 ("", Lock:(#5|#6), 0) POP
   37: #4 line 11 ("", Lock:(#5|#6)) "jane_doe"
   38: #4 line 11 ("", Lock:(#5|#6), "jane_doe") PMATCH
   39: #4 line 11 ("", Lock:(#5|#6), #6) SWAP
   40: #4 line 11 ("", #6, Lock:(#5|#6)) TESTLOCK
   41: #4 line 11 ("", 1) POP
   42: #4 line 12 ("") EXIT
Program exited.
Execution completed in 43 steps.

