#### Compiling MUV Code to MUF ########################

#### Compiling MUF Code to Tokens #####################
SETPROP "_author" on #4 = "Revar Desmera <revar@gmail.com>"
SETPROP "_note" on #4 = "An example replacement for the lsedit program, written in MUV."
SETPROP "_version" on #4 = "1.0"
SETPROP "_lib-version" on #4 = "1.0"
EXPOSED 'lsedit__init_help' AS PUBLIC
SETPROP "_defs/lsedit__init_help" on #4 = "#4 "lsedit__init_help" call"
EXPOSED 'lsedit__show_help' AS PUBLIC
SETPROP "_defs/lsedit__show_help" on #4 = "#4 "lsedit__show_help" call"
EXPOSED 'lsedit__add_helptext' AS PUBLIC
SETPROP "_defs/lsedit__add_helptext" on #4 = "#4 "lsedit__add_helptext" call"
EXPOSED 'lsedit__editor' AS PUBLIC
SETPROP "_defs/lsedit__editor" on #4 = "#4 "lsedit__editor" call"
EXPOSED 'lsedit__basic' AS PUBLIC
SETPROP "_defs/lsedit__basic" on #4 = "#4 "lsedit__basic" call"

#### Showing Compiled Tokens ##########################
    0: Function: argparse::init
    1: ""
    2: LV4: argparse::current_mode
    3: !
    4: {
    5: }
    6: ARRAY_MAKE
    7: LV5: argparse::modes_list
    8: !
    9: {
   10: }
   11: 2
   12: /
   13: ARRAY_MAKE_DICT
   14: LV6: argparse::flags_map
   15: !
   16: {
   17: }
   18: 2
   19: /
   20: ARRAY_MAKE_DICT
   21: LV7: argparse::posargs_map
   22: !
   23: {
   24: ""
   25: "remainder"
   26: }
   27: 2
   28: /
   29: ARRAY_MAKE_DICT
   30: LV8: argparse::remainder_map
   31: !
   32: 0
   33: EXIT

   34: Function: argparse::parse_posargs
   35: SV1: _posargs
   36: !
   37: SV0: _mode
   38: !
   39: {
   40: SV1: _posargs
   41: @
   42: "^([a-z0-9_]*)([^a-z0-9_])(.*)$"
   43: 1
   44: REGEXP
   45: }
   46: ARRAY_MAKE
   47: 0
   48: ARRAY_GETITEM
   49: SV2: _tok
   50: !
   51: SV2: _tok
   52: @
   53: JmpIfFalse: +53
   54: LV7: argparse::posargs_map
   55: @
   56: SV0: _mode
   57: @
   58: ARRAY_GETITEM
   59: NOT
   60: JmpIfFalse: +13
   61: {
   62: }
   63: ARRAY_MAKE
   64: DUP
   65: LV7: argparse::posargs_map
   66: @
   67: SV0: _mode
   68: @
   69: ARRAY_SETITEM
   70: LV7: argparse::posargs_map
   71: !
   72: POP
   73: LV7: argparse::posargs_map
   74: @
   75: SV0: _mode
   76: @
   77: OVER
   78: OVER
   79: ARRAY_GETITEM
   80: {
   81: SV2: _tok
   82: @
   83: 1
   84: ARRAY_GETITEM
   85: TOLOWER
   86: SV2: _tok
   87: @
   88: 2
   89: ARRAY_GETITEM
   90: }
   91: ARRAY_MAKE
   92: SWAP
   93: ARRAY_APPENDITEM
   94: ROT
   95: ROT
   96: ARRAY_SETITEM
   97: LV7: argparse::posargs_map
   98: !
   99: SV2: _tok
  100: @
  101: 3
  102: ARRAY_GETITEM
  103: SV1: _posargs
  104: !
  105: JMP: +14
  106: SV1: _posargs
  107: @
  108: TOLOWER
  109: DUP
  110: LV8: argparse::remainder_map
  111: @
  112: SV0: _mode
  113: @
  114: ARRAY_SETITEM
  115: LV8: argparse::remainder_map
  116: !
  117: POP
  118: JMP: +2
  119: JMP: -80
  120: 0
  121: EXIT

  122: Function: argparse::set_mode
  123: SV0: _name
  124: !
  125: SV0: _name
  126: @
  127: TOLOWER
  128: SV0: _name
  129: !
  130: SV0: _name
  131: @
  132: LV4: argparse::current_mode
  133: !
  134: 0
  135: EXIT

  136: Function: argparse::add_mode
  137: SV2: _posargs
  138: !
  139: SV1: _flags
  140: !
  141: SV0: _name
  142: !
  143: SV0: _name
  144: @
  145: TOLOWER
  146: SV0: _name
  147: !
  148: LV5: argparse::modes_list
  149: @
  150: SV0: _name
  151: @
  152: SWAP
  153: ARRAY_APPENDITEM
  154: LV5: argparse::modes_list
  155: !
  156: {
  157: }
  158: ARRAY_MAKE
  159: DUP
  160: LV6: argparse::flags_map
  161: @
  162: SV0: _name
  163: @
  164: ARRAY_SETITEM
  165: LV6: argparse::flags_map
  166: !
  167: POP
  168: {
  169: }
  170: ARRAY_MAKE
  171: DUP
  172: LV7: argparse::posargs_map
  173: @
  174: SV0: _name
  175: @
  176: ARRAY_SETITEM
  177: LV7: argparse::posargs_map
  178: !
  179: POP
  180: SV1: _flags
  181: @
  182: FOREACH
  183: __FORITER__
  184: JmpIfFalse: +41
  185: SV3: _flag
  186: !
  187: POP
  188: LV6: argparse::flags_map
  189: @
  190: SV0: _name
  191: @
  192: ARRAY_GETITEM
  193: NOT
  194: JmpIfFalse: +13
  195: {
  196: }
  197: ARRAY_MAKE
  198: DUP
  199: LV6: argparse::flags_map
  200: @
  201: SV0: _name
  202: @
  203: ARRAY_SETITEM
  204: LV6: argparse::flags_map
  205: !
  206: POP
  207: LV6: argparse::flags_map
  208: @
  209: SV0: _name
  210: @
  211: OVER
  212: OVER
  213: ARRAY_GETITEM
  214: SV3: _flag
  215: @
  216: TOLOWER
  217: SWAP
  218: ARRAY_APPENDITEM
  219: ROT
  220: ROT
  221: ARRAY_SETITEM
  222: LV6: argparse::flags_map
  223: !
  224: JMP: -41
  225: __FORPOP__
  226: SV0: _name
  227: @
  228: SV2: _posargs
  229: @
  230: Addr:34
  231: EXECUTE
  232: POP
  233: 0
  234: EXIT

  235: Function: argparse::add_flag
  236: SV0: _name
  237: !
  238: SV0: _name
  239: @
  240: TOLOWER
  241: SV0: _name
  242: !
  243: LV5: argparse::modes_list
  244: @
  245: FOREACH
  246: __FORITER__
  247: JmpIfFalse: +59
  248: SV1: _mode
  249: !
  250: POP
  251: SV1: _mode
  252: @
  253: TOLOWER
  254: SV1: _mode
  255: !
  256: LV5: argparse::modes_list
  257: @
  258: SV1: _mode
  259: @
  260: ARRAY_FINDVAL
  261: NOT
  262: JmpIfFalse: +8
  263: SV1: _mode
  264: @
  265: SV0: _name
  266: @
  267: "ArgParse: Option '%s' declared as part of non-existent mode '%s'!"
  268: FMTSTRING
  269: ABORT
  270: LV6: argparse::flags_map
  271: @
  272: SV1: _mode
  273: @
  274: ARRAY_GETITEM
  275: NOT
  276: JmpIfFalse: +13
  277: {
  278: }
  279: ARRAY_MAKE
  280: DUP
  281: LV6: argparse::flags_map
  282: @
  283: SV1: _mode
  284: @
  285: ARRAY_SETITEM
  286: LV6: argparse::flags_map
  287: !
  288: POP
  289: LV6: argparse::flags_map
  290: @
  291: SV1: _mode
  292: @
  293: OVER
  294: OVER
  295: ARRAY_GETITEM
  296: SV0: _name
  297: @
  298: SWAP
  299: ARRAY_APPENDITEM
  300: ROT
  301: ROT
  302: ARRAY_SETITEM
  303: LV6: argparse::flags_map
  304: !
  305: JMP: -59
  306: __FORPOP__
  307: 0
  308: EXIT

  309: Function: argparse::add_posargs
  310: SV0: _posargs
  311: !
  312: LV5: argparse::modes_list
  313: @
  314: FOREACH
  315: __FORITER__
  316: JmpIfFalse: +31
  317: SV1: _mode
  318: !
  319: POP
  320: SV1: _mode
  321: @
  322: TOLOWER
  323: SV1: _mode
  324: !
  325: LV5: argparse::modes_list
  326: @
  327: SV1: _mode
  328: @
  329: ARRAY_FINDVAL
  330: NOT
  331: JmpIfFalse: +8
  332: SV1: _mode
  333: @
  334: SV1: _mode
  335: @
  336: "ArgParse: Option '%s' declared as part of non-existent mode '%s'!"
  337: FMTSTRING
  338: ABORT
  339: SV1: _mode
  340: @
  341: SV0: _posargs
  342: @
  343: Addr:34
  344: EXECUTE
  345: POP
  346: JMP: -31
  347: __FORPOP__
  348: 0
  349: EXIT

  350: Function: argparse::show_usage
  351: TRIG
  352: NAME
  353: ";"
  354: SPLIT
  355: POP
  356: STRIPLEAD
  357: STRIPTAIL
  358: SV0: _cmd
  359: !
  360: "Usage:"
  361: LV0: me
  362: @
  363: SWAP
  364: NOTIFY
  365: LV5: argparse::modes_list
  366: @
  367: FOREACH
  368: __FORITER__
  369: JmpIfFalse: +108
  370: SV1: _mode
  371: !
  372: POP
  373: {
  374: }
  375: ARRAY_MAKE
  376: LV6: argparse::flags_map
  377: @
  378: SV1: _mode
  379: @
  380: ARRAY_GETITEM
  381: FOREACH
  382: __FORITER__
  383: JmpIfFalse: +16
  384: SV3: _flag
  385: !
  386: POP
  387: {
  388: "[#"
  389: SV3: _flag
  390: @
  391: "]"
  392: }
  393: ARRAY_MAKE
  394: ""
  395: ARRAY_JOIN
  396: SWAP
  397: ARRAY_APPENDITEM
  398: JMP: -16
  399: __FORPOP__
  400: SV2: _flags
  401: !
  402: {
  403: }
  404: ARRAY_MAKE
  405: LV7: argparse::posargs_map
  406: @
  407: SV1: _mode
  408: @
  409: ARRAY_GETITEM
  410: FOREACH
  411: __FORITER__
  412: JmpIfFalse: +21
  413: SV5: _posarg
  414: !
  415: POP
  416: {
  417: SV5: _posarg
  418: @
  419: 0
  420: ARRAY_GETITEM
  421: TOUPPER
  422: SV5: _posarg
  423: @
  424: 1
  425: ARRAY_GETITEM
  426: }
  427: ARRAY_MAKE
  428: ""
  429: ARRAY_JOIN
  430: SWAP
  431: ARRAY_APPENDITEM
  432: JMP: -21
  433: __FORPOP__
  434: SV4: _posargs
  435: !
  436: LV8: argparse::remainder_map
  437: @
  438: SV1: _mode
  439: @
  440: ARRAY_GETITEM
  441: TOUPPER
  442: SV4: _posargs
  443: @
  444: ""
  445: ARRAY_JOIN
  446: SV2: _flags
  447: @
  448: JmpIfFalse: +3
  449: " "
  450: JMP: +2
  451: ""
  452: SV2: _flags
  453: @
  454: " "
  455: ARRAY_JOIN
  456: SV1: _mode
  457: @
  458: SV1: _mode
  459: @
  460: JmpIfFalse: +3
  461: "#"
  462: JMP: +2
  463: ""
  464: SV0: _cmd
  465: @
  466: "%s %s%s %s%s%s%s"
  467: FMTSTRING
  468: SV6: _line
  469: !
  470: SV6: _line
  471: @
  472: LV0: me
  473: @
  474: SWAP
  475: NOTIFY
  476: JMP: -108
  477: __FORPOP__
  478: 0
  479: EXIT

  480: Function: argparse::parse
  481: SV0: _line
  482: !
  483: {
  484: }
  485: 2
  486: /
  487: ARRAY_MAKE_DICT
  488: SV4: _opts
  489: !
  490: 0
  491: SV5: _mode_given
  492: !
  493: SV0: _line
  494: @
  495: "#"
  496: STRINGPFX
  497: JmpIfFalse: +208
  498: {
  499: {
  500: SV0: _line
  501: @
  502: 1
  503: STRCUT
  504: }
  505: ARRAY_MAKE
  506: 1
  507: ARRAY_GETITEM
  508: " "
  509: SPLIT
  510: }
  511: ARRAY_MAKE
  512: SV1: _parts
  513: !
  514: SV1: _parts
  515: @
  516: 0
  517: ARRAY_GETITEM
  518: SV6: _opt
  519: !
  520: SV6: _opt
  521: @
  522: TOLOWER
  523: SV7: _lc_opt
  524: !
  525: 0
  526: SV8: _found
  527: !
  528: LV5: argparse::modes_list
  529: @
  530: FOREACH
  531: __FORITER__
  532: JmpIfFalse: +19
  533: SV2: _mode
  534: !
  535: POP
  536: SV2: _mode
  537: @
  538: SV7: _lc_opt
  539: @
  540: STRINGCMP
  541: NOT
  542: JmpIfFalse: +8
  543: SV2: _mode
  544: @
  545: LV4: argparse::current_mode
  546: !
  547: SV8: _found
  548: ++
  549: JMP: +2
  550: JMP: -19
  551: __FORPOP__
  552: SV8: _found
  553: @
  554: JmpIfFalse: +10
  555: SV5: _mode_given
  556: ++
  557: SV1: _parts
  558: @
  559: 1
  560: ARRAY_GETITEM
  561: SV0: _line
  562: !
  563: JMP: -70
  564: LV6: argparse::flags_map
  565: @
  566: LV4: argparse::current_mode
  567: @
  568: ARRAY_GETITEM
  569: FOREACH
  570: __FORITER__
  571: JmpIfFalse: +26
  572: SV3: _flag
  573: !
  574: POP
  575: SV3: _flag
  576: @
  577: SV7: _lc_opt
  578: @
  579: STRINGCMP
  580: NOT
  581: JmpIfFalse: +15
  582: SV6: _opt
  583: @
  584: DUP
  585: SV4: _opts
  586: @
  587: SV3: _flag
  588: @
  589: ARRAY_SETITEM
  590: SV4: _opts
  591: !
  592: POP
  593: SV8: _found
  594: ++
  595: JMP: +2
  596: JMP: -26
  597: __FORPOP__
  598: SV8: _found
  599: @
  600: JmpIfFalse: +8
  601: SV1: _parts
  602: @
  603: 1
  604: ARRAY_GETITEM
  605: SV0: _line
  606: !
  607: JMP: -114
  608: LV5: argparse::modes_list
  609: @
  610: FOREACH
  611: __FORITER__
  612: JmpIfFalse: +17
  613: SV2: _mode
  614: !
  615: POP
  616: SV2: _mode
  617: @
  618: SV7: _lc_opt
  619: @
  620: STRINGPFX
  621: JmpIfFalse: +7
  622: SV2: _mode
  623: @
  624: LV4: argparse::current_mode
  625: !
  626: SV8: _found
  627: ++
  628: JMP: -17
  629: __FORPOP__
  630: LV6: argparse::flags_map
  631: @
  632: LV4: argparse::current_mode
  633: @
  634: ARRAY_GETITEM
  635: FOREACH
  636: __FORITER__
  637: JmpIfFalse: +24
  638: SV3: _flag
  639: !
  640: POP
  641: SV3: _flag
  642: @
  643: SV7: _lc_opt
  644: @
  645: STRINGPFX
  646: JmpIfFalse: +14
  647: SV6: _opt
  648: @
  649: DUP
  650: SV4: _opts
  651: @
  652: SV3: _flag
  653: @
  654: ARRAY_SETITEM
  655: SV4: _opts
  656: !
  657: POP
  658: SV8: _found
  659: ++
  660: JMP: -24
  661: __FORPOP__
  662: SV8: _found
  663: @
  664: 1
  665: =
  666: JmpIfFalse: +9
  667: SV1: _parts
  668: @
  669: 1
  670: ARRAY_GETITEM
  671: SV0: _line
  672: !
  673: JMP: -180
  674: JMP: +23
  675: SV8: _found
  676: @
  677: 1
  678: >
  679: JmpIfFalse: +10
  680: SV6: _opt
  681: @
  682: "Option #%s is ambiguous."
  683: FMTSTRING
  684: LV0: me
  685: @
  686: SWAP
  687: NOTIFY
  688: JMP: +9
  689: SV6: _opt
  690: @
  691: "Option #%s not recognized."
  692: FMTSTRING
  693: LV0: me
  694: @
  695: SWAP
  696: NOTIFY
  697: Addr:350
  698: EXECUTE
  699: POP
  700: {
  701: }
  702: ARRAY_MAKE
  703: EXIT
  704: JMP: -211
  705: SV5: _mode_given
  706: @
  707: 1
  708: >
  709: JmpIfFalse: +13
  710: "Cannot mix modes."
  711: LV0: me
  712: @
  713: SWAP
  714: NOTIFY
  715: Addr:350
  716: EXECUTE
  717: POP
  718: {
  719: }
  720: ARRAY_MAKE
  721: EXIT
  722: LV7: argparse::posargs_map
  723: @
  724: LV4: argparse::current_mode
  725: @
  726: ARRAY_GETITEM
  727: FOREACH
  728: __FORITER__
  729: JmpIfFalse: +38
  730: SV9: _posarg
  731: !
  732: POP
  733: {
  734: SV0: _line
  735: @
  736: SV9: _posarg
  737: @
  738: 1
  739: ARRAY_GETITEM
  740: SPLIT
  741: }
  742: ARRAY_MAKE
  743: SV1: _parts
  744: !
  745: SV1: _parts
  746: @
  747: 0
  748: ARRAY_GETITEM
  749: DUP
  750: SV4: _opts
  751: @
  752: SV9: _posarg
  753: @
  754: 0
  755: ARRAY_GETITEM
  756: ARRAY_SETITEM
  757: SV4: _opts
  758: !
  759: POP
  760: SV1: _parts
  761: @
  762: 1
  763: ARRAY_GETITEM
  764: SV0: _line
  765: !
  766: JMP: -38
  767: __FORPOP__
  768: SV0: _line
  769: @
  770: DUP
  771: SV4: _opts
  772: @
  773: LV8: argparse::remainder_map
  774: @
  775: LV4: argparse::current_mode
  776: @
  777: ARRAY_GETITEM
  778: ARRAY_SETITEM
  779: SV4: _opts
  780: !
  781: POP
  782: LV4: argparse::current_mode
  783: @
  784: DUP
  785: SV4: _opts
  786: @
  787: "mode"
  788: ARRAY_SETITEM
  789: SV4: _opts
  790: !
  791: POP
  792: SV4: _opts
  793: @
  794: EXIT

  795: Function: lsedit__init_help
  796: {
  797: }
  798: ARRAY_MAKE
  799: LV9: lsedit::help_lines
  800: !
  801: 0
  802: EXIT

  803: Function: lsedit__show_help
  804: {
  805: {
  806: "-- Commands: -----------------------------------------------------"
  807: "..LINE              Insert .LINE at current insertion position."
  808: ".h                  Show this help message."
  809: ".q                  Quit editor, saving changes."
  810: ".x                  Quit editor, aborting changes."
  811: ".l                  List all lines."
  812: ".l LINE             List given LINE."
  813: ".l LINE,LINE        List given LINE range, inclusive."
  814: ".i LINE             Move insertion to before LINE."
  815: ".d LINE             Delete LINE."
  816: ".d LINE,LINE        Delete given LINE range, inclusive."
  817: ".f                  Format all lines to 75 columns."
  818: ".f LINE,LINE        Format given line range to 75 columns."
  819: ".f LINE,LINE=COLS   Format given line range to COLS columns."
  820: ".s /FIND/REPL       Substitute regexp FIND with REPL in all lines."
  821: ".s LINE/FIND/REPL   Substitute regexp FIND with REPL in LINE."
  822: ".s L1,L2/FIND/REPL  Substitute FIND with REPL between L1 and L2."
  823: ".w                  Write/Save changes without exiting editor."
  824: ".w OBJ=PROP         Write/Save list to OBJ in proplist PROP."
  825: }
  826: ARRAY_MAKE
  827: LV9: lsedit::help_lines
  828: @
  829: {
  830: "------------------------------------------------------------------"
  831: }
  832: ARRAY_MAKE
  833: }
  834: ARRAY_MAKE
  835: {
  836: }
  837: ARRAY_MAKE
  838: SWAP
  839: ARRAY_REVERSE
  840: FOREACH
  841: __FORITER__
  842: JmpIfFalse: +7
  843: SWAP
  844: POP
  845: 0
  846: SWAP
  847: ARRAY_INSERTRANGE
  848: JMP: -7
  849: __FORPOP__
  850: FOREACH
  851: __FORITER__
  852: JmpIfFalse: +11
  853: SV0: _line
  854: !
  855: POP
  856: SV0: _line
  857: @
  858: LV0: me
  859: @
  860: SWAP
  861: NOTIFY
  862: JMP: -11
  863: __FORPOP__
  864: 0
  865: EXIT

  866: Function: lsedit__add_helptext
  867: SV0: _line
  868: !
  869: LV9: lsedit::help_lines
  870: @
  871: SV0: _line
  872: @
  873: SWAP
  874: ARRAY_APPENDITEM
  875: LV9: lsedit::help_lines
  876: !
  877: 0
  878: EXIT

  879: Function: lsedit::show_list
  880: SV3: _pos
  881: !
  882: SV2: _end
  883: !
  884: SV1: _start
  885: !
  886: SV0: _lines
  887: !
  888: SV0: _lines
  889: @
  890: FOREACH
  891: __FORITER__
  892: JmpIfFalse: +41
  893: SV5: _line
  894: !
  895: SV4: _lnum
  896: !
  897: SV4: _lnum
  898: ++
  899: SV4: _lnum
  900: @
  901: SV1: _start
  902: @
  903: >=
  904: DUP
  905: JmpIfFalse: +7
  906: POP
  907: SV4: _lnum
  908: @
  909: SV2: _end
  910: @
  911: <=
  912: JmpIfFalse: +20
  913: SV5: _line
  914: @
  915: SV4: _lnum
  916: @
  917: SV4: _lnum
  918: @
  919: SV3: _pos
  920: @
  921: =
  922: JmpIfFalse: +3
  923: ">"
  924: JMP: +2
  925: " "
  926: "%s%3i: %s"
  927: FMTSTRING
  928: LV0: me
  929: @
  930: SWAP
  931: NOTIFY
  932: JMP: -41
  933: __FORPOP__
  934: SV3: _pos
  935: @
  936: SV0: _lines
  937: @
  938: ARRAY_COUNT
  939: >
  940: JmpIfFalse: +6
  941: ">"
  942: LV0: me
  943: @
  944: SWAP
  945: NOTIFY
  946: "Done."
  947: LV0: me
  948: @
  949: SWAP
  950: NOTIFY
  951: 0
  952: EXIT

  953: Function: lsedit::list_split_range
  954: SV2: _end
  955: !
  956: SV1: _start
  957: !
  958: SV0: _lines
  959: !
  960: {
  961: }
  962: ARRAY_MAKE
  963: SV3: _pfx
  964: !
  965: {
  966: }
  967: ARRAY_MAKE
  968: SV4: _mid
  969: !
  970: {
  971: }
  972: ARRAY_MAKE
  973: SV5: _sfx
  974: !
  975: SV0: _lines
  976: @
  977: FOREACH
  978: __FORITER__
  979: JmpIfFalse: +58
  980: SV7: _line
  981: !
  982: SV6: _idx
  983: !
  984: SV6: _idx
  985: ++
  986: SV6: _idx
  987: @
  988: SV1: _start
  989: @
  990: <
  991: JmpIfFalse: +9
  992: SV3: _pfx
  993: @
  994: SV7: _line
  995: @
  996: SWAP
  997: ARRAY_APPENDITEM
  998: SV3: _pfx
  999: !
 1000: SV6: _idx
 1001: @
 1002: SV1: _start
 1003: @
 1004: >=
 1005: DUP
 1006: JmpIfFalse: +7
 1007: POP
 1008: SV6: _idx
 1009: @
 1010: SV2: _end
 1011: @
 1012: <=
 1013: JmpIfFalse: +9
 1014: SV4: _mid
 1015: @
 1016: SV7: _line
 1017: @
 1018: SWAP
 1019: ARRAY_APPENDITEM
 1020: SV4: _mid
 1021: !
 1022: SV6: _idx
 1023: @
 1024: SV2: _end
 1025: @
 1026: >
 1027: JmpIfFalse: +9
 1028: SV5: _sfx
 1029: @
 1030: SV7: _line
 1031: @
 1032: SWAP
 1033: ARRAY_APPENDITEM
 1034: SV5: _sfx
 1035: !
 1036: JMP: -58
 1037: __FORPOP__
 1038: {
 1039: SV3: _pfx
 1040: @
 1041: SV4: _mid
 1042: @
 1043: SV5: _sfx
 1044: @
 1045: }
 1046: ARRAY_MAKE
 1047: EXIT

 1048: Function: lsedit::regexp_list_sub
 1049: SV2: _repl
 1050: !
 1051: SV1: _fnd
 1052: !
 1053: SV0: _lines
 1054: !
 1055: 0
 1056: SV3: _changed
 1057: !
 1058: SV0: _lines
 1059: @
 1060: FOREACH
 1061: __FORITER__
 1062: JmpIfFalse: +37
 1063: SV5: _line
 1064: !
 1065: SV4: _idx
 1066: !
 1067: SV5: _line
 1068: @
 1069: SV1: _fnd
 1070: @
 1071: SV2: _repl
 1072: @
 1073: 2
 1074: 1
 1075: BITOR
 1076: REGSUB
 1077: SV6: _newln
 1078: !
 1079: SV6: _newln
 1080: @
 1081: SV5: _line
 1082: @
 1083: STRCMP
 1084: JmpIfFalse: +14
 1085: SV6: _newln
 1086: @
 1087: DUP
 1088: SV0: _lines
 1089: @
 1090: SV4: _idx
 1091: @
 1092: ARRAY_SETITEM
 1093: SV0: _lines
 1094: !
 1095: POP
 1096: SV3: _changed
 1097: ++
 1098: JMP: -37
 1099: __FORPOP__
 1100: {
 1101: SV3: _changed
 1102: @
 1103: SV0: _lines
 1104: @
 1105: }
 1106: ARRAY_MAKE
 1107: EXIT

 1108: Function: lsedit::format_list
 1109: SV1: _cols
 1110: !
 1111: SV0: _lines
 1112: !
 1113: SV0: _lines
 1114: @
 1115: " "
 1116: ARRAY_JOIN
 1117: SV2: _txt
 1118: !
 1119: SV2: _txt
 1120: @
 1121: "  *"
 1122: " "
 1123: 2
 1124: REGSUB
 1125: SV2: _txt
 1126: !
 1127: {
 1128: }
 1129: ARRAY_MAKE
 1130: SV3: _out
 1131: !
 1132: SV2: _txt
 1133: @
 1134: STRLEN
 1135: SV1: _cols
 1136: @
 1137: >
 1138: JmpIfFalse: +94
 1139: {
 1140: SV2: _txt
 1141: @
 1142: SV1: _cols
 1143: @
 1144: STRCUT
 1145: }
 1146: ARRAY_MAKE
 1147: DUP
 1148: DUP
 1149: 0
 1150: ARRAY_GETITEM
 1151: SV4: _pre
 1152: !
 1153: DUP
 1154: 1
 1155: ARRAY_GETITEM
 1156: SV2: _txt
 1157: !
 1158: POP
 1159: POP
 1160: {
 1161: SV4: _pre
 1162: @
 1163: " "
 1164: RSPLIT
 1165: }
 1166: ARRAY_MAKE
 1167: DUP
 1168: DUP
 1169: 0
 1170: ARRAY_GETITEM
 1171: SV4: _pre
 1172: !
 1173: DUP
 1174: 1
 1175: ARRAY_GETITEM
 1176: SV5: _rem
 1177: !
 1178: POP
 1179: POP
 1180: SV4: _pre
 1181: @
 1182: NOT
 1183: JmpIfFalse: +9
 1184: SV5: _rem
 1185: @
 1186: SV4: _pre
 1187: !
 1188: ""
 1189: SV5: _rem
 1190: !
 1191: JMP: +25
 1192: SV5: _rem
 1193: @
 1194: STRLEN
 1195: SV1: _cols
 1196: @
 1197: 2
 1198: /
 1199: >
 1200: JmpIfFalse: +16
 1201: {
 1202: SV4: _pre
 1203: @
 1204: " "
 1205: SV5: _rem
 1206: @
 1207: }
 1208: ARRAY_MAKE
 1209: ""
 1210: ARRAY_JOIN
 1211: SV4: _pre
 1212: !
 1213: ""
 1214: SV5: _rem
 1215: !
 1216: SV3: _out
 1217: @
 1218: SV4: _pre
 1219: @
 1220: SWAP
 1221: ARRAY_APPENDITEM
 1222: SV3: _out
 1223: !
 1224: SV5: _rem
 1225: @
 1226: SV2: _txt
 1227: @
 1228: STRCAT
 1229: SV2: _txt
 1230: !
 1231: JMP: -99
 1232: SV2: _txt
 1233: @
 1234: STRIPLEAD
 1235: STRIPTAIL
 1236: JmpIfFalse: +9
 1237: SV3: _out
 1238: @
 1239: SV2: _txt
 1240: @
 1241: SWAP
 1242: ARRAY_APPENDITEM
 1243: SV3: _out
 1244: !
 1245: SV3: _out
 1246: @
 1247: EXIT

 1248: Function: lsedit::parse_lines
 1249: SV2: _line2
 1250: !
 1251: SV1: _line1
 1252: !
 1253: SV0: _str
 1254: !
 1255: SV0: _str
 1256: @
 1257: ","
 1258: INSTR
 1259: JmpIfFalse: +25
 1260: {
 1261: SV0: _str
 1262: @
 1263: ","
 1264: SPLIT
 1265: }
 1266: ARRAY_MAKE
 1267: SV0: _str
 1268: !
 1269: SV0: _str
 1270: @
 1271: 0
 1272: ARRAY_GETITEM
 1273: ATOI
 1274: SV1: _line1
 1275: !
 1276: SV0: _str
 1277: @
 1278: 1
 1279: ARRAY_GETITEM
 1280: ATOI
 1281: SV2: _line2
 1282: !
 1283: JMP: +43
 1284: SV0: _str
 1285: @
 1286: " "
 1287: INSTR
 1288: JmpIfFalse: +25
 1289: {
 1290: SV0: _str
 1291: @
 1292: " "
 1293: SPLIT
 1294: }
 1295: ARRAY_MAKE
 1296: SV0: _str
 1297: !
 1298: SV0: _str
 1299: @
 1300: 0
 1301: ARRAY_GETITEM
 1302: ATOI
 1303: SV1: _line1
 1304: !
 1305: SV0: _str
 1306: @
 1307: 1
 1308: ARRAY_GETITEM
 1309: ATOI
 1310: SV2: _line2
 1311: !
 1312: JMP: +14
 1313: SV0: _str
 1314: @
 1315: STRIPLEAD
 1316: STRIPTAIL
 1317: JmpIfFalse: +9
 1318: SV0: _str
 1319: @
 1320: ATOI
 1321: DUP
 1322: SV2: _line2
 1323: !
 1324: SV1: _line1
 1325: !
 1326: {
 1327: SV1: _line1
 1328: @
 1329: SV2: _line2
 1330: @
 1331: }
 1332: ARRAY_MAKE
 1333: EXIT

 1334: Function: lsedit__editor
 1335: SV2: _prop
 1336: !
 1337: SV1: _obj
 1338: !
 1339: SV0: _lines
 1340: !
 1341: 0
 1342: SV3: _line1
 1343: !
 1344: 0
 1345: SV4: _line2
 1346: !
 1347: LV10: lsedit::insert_pos
 1348: @
 1349: SV0: _lines
 1350: @
 1351: ARRAY_COUNT
 1352: ++
 1353: >
 1354: JmpIfFalse: +15
 1355: SV0: _lines
 1356: @
 1357: ARRAY_COUNT
 1358: ++
 1359: LV10: lsedit::insert_pos
 1360: !
 1361: LV10: lsedit::insert_pos
 1362: @
 1363: "Inserting at line %i"
 1364: FMTSTRING
 1365: LV0: me
 1366: @
 1367: SWAP
 1368: NOTIFY
 1369: READ
 1370: SV5: _inln
 1371: !
 1372: SV5: _inln
 1373: @
 1374: "."
 1375: 1
 1376: STRNCMP
 1377: JmpIfFalse: +14
 1378: SV5: _inln
 1379: @
 1380: SV0: _lines
 1381: @
 1382: LV10: lsedit::insert_pos
 1383: @
 1384: --
 1385: ARRAY_INSERTITEM
 1386: SV0: _lines
 1387: !
 1388: LV10: lsedit::insert_pos
 1389: ++
 1390: JMP: -43
 1391: SV5: _inln
 1392: @
 1393: ".."
 1394: 2
 1395: STRNCMP
 1396: NOT
 1397: JmpIfFalse: +25
 1398: {
 1399: SV5: _inln
 1400: @
 1401: 1
 1402: STRCUT
 1403: }
 1404: ARRAY_MAKE
 1405: 1
 1406: ARRAY_GETITEM
 1407: SV5: _inln
 1408: !
 1409: SV5: _inln
 1410: @
 1411: SV0: _lines
 1412: @
 1413: LV10: lsedit::insert_pos
 1414: @
 1415: --
 1416: ARRAY_INSERTITEM
 1417: SV0: _lines
 1418: !
 1419: LV10: lsedit::insert_pos
 1420: ++
 1421: JMP: -74
 1422: {
 1423: SV5: _inln
 1424: @
 1425: " "
 1426: SPLIT
 1427: }
 1428: ARRAY_MAKE
 1429: DUP
 1430: DUP
 1431: 0
 1432: ARRAY_GETITEM
 1433: SV6: _cmd
 1434: !
 1435: DUP
 1436: 1
 1437: ARRAY_GETITEM
 1438: SV7: _cmdargs
 1439: !
 1440: POP
 1441: POP
 1442: 0
 1443: POP
 1444: SV6: _cmd
 1445: @
 1446: DUP
 1447: ".h"
 1448: STRCMP
 1449: NOT
 1450: JmpIfFalse: +5
 1451: Addr:803
 1452: EXECUTE
 1453: POP
 1454: JMP: +751
 1455: DUP
 1456: ".q"
 1457: STRCMP
 1458: NOT
 1459: JmpIfFalse: +24
 1460: SV1: _obj
 1461: @
 1462: SV2: _prop
 1463: @
 1464: SV0: _lines
 1465: @
 1466: ARRAY_PUT_PROPLIST
 1467: "Saved."
 1468: LV0: me
 1469: @
 1470: SWAP
 1471: NOTIFY
 1472: {
 1473: SV6: _cmd
 1474: @
 1475: SV7: _cmdargs
 1476: @
 1477: SV0: _lines
 1478: @
 1479: }
 1480: ARRAY_MAKE
 1481: EXIT
 1482: JMP: +723
 1483: DUP
 1484: ".x"
 1485: STRCMP
 1486: NOT
 1487: JmpIfFalse: +17
 1488: "Aborting."
 1489: LV0: me
 1490: @
 1491: SWAP
 1492: NOTIFY
 1493: {
 1494: SV6: _cmd
 1495: @
 1496: SV7: _cmdargs
 1497: @
 1498: SV0: _lines
 1499: @
 1500: }
 1501: ARRAY_MAKE
 1502: EXIT
 1503: JMP: +702
 1504: DUP
 1505: ".l"
 1506: STRCMP
 1507: NOT
 1508: JmpIfFalse: +32
 1509: SV7: _cmdargs
 1510: @
 1511: 1
 1512: 999999
 1513: Addr:1248
 1514: EXECUTE
 1515: DUP
 1516: DUP
 1517: 0
 1518: ARRAY_GETITEM
 1519: SV3: _line1
 1520: !
 1521: DUP
 1522: 1
 1523: ARRAY_GETITEM
 1524: SV4: _line2
 1525: !
 1526: POP
 1527: POP
 1528: SV0: _lines
 1529: @
 1530: SV3: _line1
 1531: @
 1532: SV4: _line2
 1533: @
 1534: LV10: lsedit::insert_pos
 1535: @
 1536: Addr:879
 1537: EXECUTE
 1538: POP
 1539: JMP: +666
 1540: DUP
 1541: ".i"
 1542: STRCMP
 1543: NOT
 1544: JmpIfFalse: +60
 1545: SV7: _cmdargs
 1546: @
 1547: 1
 1548: 1
 1549: Addr:1248
 1550: EXECUTE
 1551: DUP
 1552: DUP
 1553: 0
 1554: ARRAY_GETITEM
 1555: SV3: _line1
 1556: !
 1557: DUP
 1558: 1
 1559: ARRAY_GETITEM
 1560: SV4: _line2
 1561: !
 1562: POP
 1563: POP
 1564: SV3: _line1
 1565: @
 1566: SV4: _line2
 1567: @
 1568: =
 1569: NOT
 1570: JmpIfFalse: +7
 1571: "Usage: .i LINENUM"
 1572: LV0: me
 1573: @
 1574: SWAP
 1575: NOTIFY
 1576: JMP: +629
 1577: SV3: _line1
 1578: @
 1579: LV10: lsedit::insert_pos
 1580: !
 1581: LV10: lsedit::insert_pos
 1582: @
 1583: SV0: _lines
 1584: @
 1585: ARRAY_COUNT
 1586: ++
 1587: >
 1588: JmpIfFalse: +7
 1589: SV0: _lines
 1590: @
 1591: ARRAY_COUNT
 1592: ++
 1593: LV10: lsedit::insert_pos
 1594: !
 1595: LV10: lsedit::insert_pos
 1596: @
 1597: "Inserting at line %i"
 1598: FMTSTRING
 1599: LV0: me
 1600: @
 1601: SWAP
 1602: NOTIFY
 1603: JMP: +602
 1604: DUP
 1605: ".s"
 1606: STRCMP
 1607: NOT
 1608: JmpIfFalse: +175
 1609: SV7: _cmdargs
 1610: @
 1611: "/"
 1612: EXPLODE_ARRAY
 1613: SV7: _cmdargs
 1614: !
 1615: SV7: _cmdargs
 1616: @
 1617: ARRAY_COUNT
 1618: 3
 1619: =
 1620: JmpIfFalse: +157
 1621: SV7: _cmdargs
 1622: @
 1623: DUP
 1624: DUP
 1625: 0
 1626: ARRAY_GETITEM
 1627: SV3: _line1
 1628: !
 1629: DUP
 1630: 1
 1631: ARRAY_GETITEM
 1632: SV8: _fnd
 1633: !
 1634: DUP
 1635: 2
 1636: ARRAY_GETITEM
 1637: SV9: _repl
 1638: !
 1639: POP
 1640: POP
 1641: SV3: _line1
 1642: @
 1643: 1
 1644: 999999
 1645: Addr:1248
 1646: EXECUTE
 1647: DUP
 1648: DUP
 1649: 0
 1650: ARRAY_GETITEM
 1651: SV3: _line1
 1652: !
 1653: DUP
 1654: 1
 1655: ARRAY_GETITEM
 1656: SV4: _line2
 1657: !
 1658: POP
 1659: POP
 1660: SV3: _line1
 1661: @
 1662: NOT
 1663: DUP
 1664: NOT
 1665: JmpIfFalse: +5
 1666: POP
 1667: SV4: _line2
 1668: @
 1669: NOT
 1670: DUP
 1671: NOT
 1672: JmpIfFalse: +5
 1673: POP
 1674: SV8: _fnd
 1675: @
 1676: NOT
 1677: JmpIfFalse: +7
 1678: "Usage: .s [LINE[,LINE]]/FIND/REPLACE"
 1679: LV0: me
 1680: @
 1681: SWAP
 1682: NOTIFY
 1683: JMP: +522
 1684: SV0: _lines
 1685: @
 1686: SV3: _line1
 1687: @
 1688: SV4: _line2
 1689: @
 1690: Addr:953
 1691: EXECUTE
 1692: DUP
 1693: DUP
 1694: 0
 1695: ARRAY_GETITEM
 1696: SV10: _pfx
 1697: !
 1698: DUP
 1699: 1
 1700: ARRAY_GETITEM
 1701: SV11: _subbed
 1702: !
 1703: DUP
 1704: 2
 1705: ARRAY_GETITEM
 1706: SV12: _sfx
 1707: !
 1708: POP
 1709: POP
 1710: SV11: _subbed
 1711: @
 1712: SV8: _fnd
 1713: @
 1714: SV9: _repl
 1715: @
 1716: Addr:1048
 1717: EXECUTE
 1718: DUP
 1719: DUP
 1720: 0
 1721: ARRAY_GETITEM
 1722: SV13: _changed
 1723: !
 1724: DUP
 1725: 1
 1726: ARRAY_GETITEM
 1727: SV11: _subbed
 1728: !
 1729: POP
 1730: POP
 1731: {
 1732: SV10: _pfx
 1733: @
 1734: SV11: _subbed
 1735: @
 1736: SV12: _sfx
 1737: @
 1738: }
 1739: ARRAY_MAKE
 1740: {
 1741: }
 1742: ARRAY_MAKE
 1743: SWAP
 1744: ARRAY_REVERSE
 1745: FOREACH
 1746: __FORITER__
 1747: JmpIfFalse: +7
 1748: SWAP
 1749: POP
 1750: 0
 1751: SWAP
 1752: ARRAY_INSERTRANGE
 1753: JMP: -7
 1754: __FORPOP__
 1755: SV0: _lines
 1756: !
 1757: SV13: _changed
 1758: @
 1759: "Changed %i lines."
 1760: FMTSTRING
 1761: LV0: me
 1762: @
 1763: SWAP
 1764: NOTIFY
 1765: SV0: _lines
 1766: @
 1767: SV3: _line1
 1768: @
 1769: SV4: _line2
 1770: @
 1771: LV10: lsedit::insert_pos
 1772: @
 1773: Addr:879
 1774: EXECUTE
 1775: POP
 1776: JMP: +6
 1777: "Usage: .s [LINE[,LINE]]/FIND/REPLACE"
 1778: LV0: me
 1779: @
 1780: SWAP
 1781: NOTIFY
 1782: JMP: +423
 1783: DUP
 1784: ".d"
 1785: STRCMP
 1786: NOT
 1787: JmpIfFalse: +101
 1788: SV0: _lines
 1789: @
 1790: ARRAY_COUNT
 1791: SV14: _oldcount
 1792: !
 1793: SV7: _cmdargs
 1794: @
 1795: 0
 1796: 0
 1797: Addr:1248
 1798: EXECUTE
 1799: DUP
 1800: DUP
 1801: 0
 1802: ARRAY_GETITEM
 1803: SV3: _line1
 1804: !
 1805: DUP
 1806: 1
 1807: ARRAY_GETITEM
 1808: SV4: _line2
 1809: !
 1810: POP
 1811: POP
 1812: SV3: _line1
 1813: @
 1814: NOT
 1815: DUP
 1816: NOT
 1817: JmpIfFalse: +5
 1818: POP
 1819: SV4: _line2
 1820: @
 1821: NOT
 1822: JmpIfFalse: +6
 1823: "Usage: .d LINENUM [LINENUM]"
 1824: LV0: me
 1825: @
 1826: SWAP
 1827: NOTIFY
 1828: SV0: _lines
 1829: @
 1830: SV3: _line1
 1831: @
 1832: --
 1833: SV4: _line2
 1834: @
 1835: --
 1836: ARRAY_DELRANGE
 1837: SV0: _lines
 1838: !
 1839: SV14: _oldcount
 1840: @
 1841: SV0: _lines
 1842: @
 1843: ARRAY_COUNT
 1844: -
 1845: "Deleted %i lines."
 1846: FMTSTRING
 1847: LV0: me
 1848: @
 1849: SWAP
 1850: NOTIFY
 1851: LV10: lsedit::insert_pos
 1852: @
 1853: SV3: _line1
 1854: @
 1855: >=
 1856: JmpIfFalse: +23
 1857: LV10: lsedit::insert_pos
 1858: @
 1859: SV4: _line2
 1860: @
 1861: >
 1862: JmpIfFalse: +13
 1863: LV10: lsedit::insert_pos
 1864: @
 1865: SV4: _line2
 1866: @
 1867: SV3: _line1
 1868: @
 1869: -
 1870: ++
 1871: -
 1872: LV10: lsedit::insert_pos
 1873: !
 1874: JMP: +5
 1875: SV3: _line1
 1876: @
 1877: LV10: lsedit::insert_pos
 1878: !
 1879: LV10: lsedit::insert_pos
 1880: @
 1881: "Inserting at line %i"
 1882: FMTSTRING
 1883: LV0: me
 1884: @
 1885: SWAP
 1886: NOTIFY
 1887: JMP: +318
 1888: DUP
 1889: ".w"
 1890: STRCMP
 1891: NOT
 1892: JmpIfFalse: +138
 1893: SV7: _cmdargs
 1894: @
 1895: "="
 1896: EXPLODE_ARRAY
 1897: SV7: _cmdargs
 1898: !
 1899: SV7: _cmdargs
 1900: @
 1901: NOT
 1902: JmpIfFalse: +28
 1903: SV1: _obj
 1904: @
 1905: DUP
 1906: JmpIfFalse: +4
 1907: POP
 1908: SV2: _prop
 1909: @
 1910: JmpIfFalse: +14
 1911: SV1: _obj
 1912: @
 1913: SV2: _prop
 1914: @
 1915: SV0: _lines
 1916: @
 1917: ARRAY_PUT_PROPLIST
 1918: "Saved."
 1919: LV0: me
 1920: @
 1921: SWAP
 1922: NOTIFY
 1923: JMP: +6
 1924: "Usage: .w OBJECT=LISTPROP"
 1925: LV0: me
 1926: @
 1927: SWAP
 1928: NOTIFY
 1929: JMP: +100
 1930: SV7: _cmdargs
 1931: @
 1932: ARRAY_COUNT
 1933: 2
 1934: =
 1935: JmpIfFalse: +89
 1936: SV7: _cmdargs
 1937: @
 1938: DUP
 1939: DUP
 1940: 0
 1941: ARRAY_GETITEM
 1942: SV15: _saveobj
 1943: !
 1944: DUP
 1945: 1
 1946: ARRAY_GETITEM
 1947: SV16: _savelist
 1948: !
 1949: POP
 1950: POP
 1951: SV15: _saveobj
 1952: @
 1953: MATCH
 1954: DUP
 1955: #-1
 1956: DBCMP
 1957: JmpIfFalse: +5
 1958: LV0: me
 1959: @
 1960: "I don't see that here!"
 1961: NOTIFY
 1962: DUP
 1963: #-2
 1964: DBCMP
 1965: JmpIfFalse: +5
 1966: LV0: me
 1967: @
 1968: "I don't know which one you mean!"
 1969: NOTIFY
 1970: DUP
 1971: #-3
 1972: DBCMP
 1973: JmpIfFalse: +5
 1974: POP
 1975: LV0: me
 1976: @
 1977: GETLINK
 1978: DUP
 1979: OK?
 1980: JmpIfFalse: +13
 1981: LV0: me
 1982: @
 1983: OVER
 1984: CONTROLS
 1985: NOT
 1986: JmpIfFalse: +7
 1987: POP
 1988: #-1
 1989: LV0: me
 1990: @
 1991: "Permission denied."
 1992: NOTIFY
 1993: SV15: _saveobj
 1994: !
 1995: SV15: _saveobj
 1996: @
 1997: 0
 1998: <
 1999: JmpIfFalse: +2
 2000: JMP: +205
 2001: SV16: _savelist
 2002: @
 2003: NOT
 2004: JmpIfFalse: +7
 2005: "Usage: .w [OBJECT=LISTPROP]"
 2006: LV0: me
 2007: @
 2008: SWAP
 2009: NOTIFY
 2010: JMP: +195
 2011: SV15: _saveobj
 2012: @
 2013: SV16: _savelist
 2014: @
 2015: SV0: _lines
 2016: @
 2017: ARRAY_PUT_PROPLIST
 2018: "Saved."
 2019: LV0: me
 2020: @
 2021: SWAP
 2022: NOTIFY
 2023: JMP: +6
 2024: "Usage: .w [OBJECT=LISTPROP]"
 2025: LV0: me
 2026: @
 2027: SWAP
 2028: NOTIFY
 2029: JMP: +176
 2030: DUP
 2031: ".f"
 2032: STRCMP
 2033: NOT
 2034: JmpIfFalse: +159
 2035: {
 2036: SV7: _cmdargs
 2037: @
 2038: "="
 2039: SPLIT
 2040: }
 2041: ARRAY_MAKE
 2042: DUP
 2043: DUP
 2044: 0
 2045: ARRAY_GETITEM
 2046: SV7: _cmdargs
 2047: !
 2048: DUP
 2049: 1
 2050: ARRAY_GETITEM
 2051: SV17: _cols
 2052: !
 2053: POP
 2054: POP
 2055: SV7: _cmdargs
 2056: @
 2057: 1
 2058: 999999
 2059: Addr:1248
 2060: EXECUTE
 2061: DUP
 2062: DUP
 2063: 0
 2064: ARRAY_GETITEM
 2065: SV3: _line1
 2066: !
 2067: DUP
 2068: 1
 2069: ARRAY_GETITEM
 2070: SV4: _line2
 2071: !
 2072: POP
 2073: POP
 2074: SV17: _cols
 2075: @
 2076: JmpIfFalse: +5
 2077: SV17: _cols
 2078: @
 2079: ATOI
 2080: JMP: +2
 2081: 75
 2082: SV17: _cols
 2083: !
 2084: SV17: _cols
 2085: @
 2086: NOT
 2087: DUP
 2088: NOT
 2089: JmpIfFalse: +5
 2090: POP
 2091: SV3: _line1
 2092: @
 2093: NOT
 2094: DUP
 2095: NOT
 2096: JmpIfFalse: +5
 2097: POP
 2098: SV4: _line2
 2099: @
 2100: NOT
 2101: JmpIfFalse: +7
 2102: "Usage: .f [L1,[L2]][=LISTPROP]"
 2103: LV0: me
 2104: @
 2105: SWAP
 2106: NOTIFY
 2107: JMP: +98
 2108: SV0: _lines
 2109: @
 2110: SV3: _line1
 2111: @
 2112: SV4: _line2
 2113: @
 2114: Addr:953
 2115: EXECUTE
 2116: DUP
 2117: DUP
 2118: 0
 2119: ARRAY_GETITEM
 2120: SV18: _pfx2
 2121: !
 2122: DUP
 2123: 1
 2124: ARRAY_GETITEM
 2125: SV19: _mid
 2126: !
 2127: DUP
 2128: 2
 2129: ARRAY_GETITEM
 2130: SV20: _sfx2
 2131: !
 2132: POP
 2133: POP
 2134: SV19: _mid
 2135: @
 2136: ARRAY_COUNT
 2137: SV21: _origcnt
 2138: !
 2139: SV19: _mid
 2140: @
 2141: SV17: _cols
 2142: @
 2143: Addr:1108
 2144: EXECUTE
 2145: SV19: _mid
 2146: !
 2147: {
 2148: SV18: _pfx2
 2149: @
 2150: SV19: _mid
 2151: @
 2152: SV20: _sfx2
 2153: @
 2154: }
 2155: ARRAY_MAKE
 2156: {
 2157: }
 2158: ARRAY_MAKE
 2159: SWAP
 2160: ARRAY_REVERSE
 2161: FOREACH
 2162: __FORITER__
 2163: JmpIfFalse: +7
 2164: SWAP
 2165: POP
 2166: 0
 2167: SWAP
 2168: ARRAY_INSERTRANGE
 2169: JMP: -7
 2170: __FORPOP__
 2171: SV0: _lines
 2172: !
 2173: SV21: _origcnt
 2174: @
 2175: "Formatted %i lines."
 2176: FMTSTRING
 2177: LV0: me
 2178: @
 2179: SWAP
 2180: NOTIFY
 2181: SV0: _lines
 2182: @
 2183: SV3: _line1
 2184: @
 2185: SV4: _line2
 2186: @
 2187: LV10: lsedit::insert_pos
 2188: @
 2189: Addr:879
 2190: EXECUTE
 2191: POP
 2192: JMP: +13
 2193: {
 2194: SV6: _cmd
 2195: @
 2196: SV7: _cmdargs
 2197: @
 2198: SV0: _lines
 2199: @
 2200: }
 2201: ARRAY_MAKE
 2202: EXIT
 2203: JMP: +2
 2204: JMP: -761
 2205: POP
 2206: JMP: -859
 2207: 0
 2208: EXIT

 2209: Function: lsedit__basic
 2210: SV0: _arg
 2211: !
 2212: Addr:0
 2213: EXECUTE
 2214: POP
 2215: ""
 2216: Addr:122
 2217: EXECUTE
 2218: POP
 2219: ""
 2220: {
 2221: }
 2222: ARRAY_MAKE
 2223: "obj=list"
 2224: Addr:136
 2225: EXECUTE
 2226: POP
 2227: SV0: _arg
 2228: @
 2229: Addr:480
 2230: EXECUTE
 2231: SV1: _opts
 2232: !
 2233: SV1: _opts
 2234: @
 2235: NOT
 2236: JmpIfFalse: +3
 2237: 0
 2238: EXIT
 2239: SV1: _opts
 2240: @
 2241: "obj"
 2242: ARRAY_GETITEM
 2243: NOT
 2244: DUP
 2245: NOT
 2246: JmpIfFalse: +7
 2247: POP
 2248: SV1: _opts
 2249: @
 2250: "list"
 2251: ARRAY_GETITEM
 2252: NOT
 2253: JmpIfFalse: +6
 2254: Addr:350
 2255: EXECUTE
 2256: POP
 2257: 0
 2258: EXIT
 2259: SV1: _opts
 2260: @
 2261: "obj"
 2262: ARRAY_GETITEM
 2263: MATCH
 2264: DUP
 2265: #-1
 2266: DBCMP
 2267: JmpIfFalse: +5
 2268: LV0: me
 2269: @
 2270: "I don't see that here!"
 2271: NOTIFY
 2272: DUP
 2273: #-2
 2274: DBCMP
 2275: JmpIfFalse: +5
 2276: LV0: me
 2277: @
 2278: "I don't know which one you mean!"
 2279: NOTIFY
 2280: DUP
 2281: #-3
 2282: DBCMP
 2283: JmpIfFalse: +5
 2284: POP
 2285: LV0: me
 2286: @
 2287: GETLINK
 2288: DUP
 2289: OK?
 2290: JmpIfFalse: +13
 2291: LV0: me
 2292: @
 2293: OVER
 2294: CONTROLS
 2295: NOT
 2296: JmpIfFalse: +7
 2297: POP
 2298: #-1
 2299: LV0: me
 2300: @
 2301: "Permission denied."
 2302: NOTIFY
 2303: SV2: _obj
 2304: !
 2305: SV2: _obj
 2306: @
 2307: 0
 2308: <
 2309: JmpIfFalse: +3
 2310: 0
 2311: EXIT
 2312: 1
 2313: LV10: lsedit::insert_pos
 2314: !
 2315: SV2: _obj
 2316: @
 2317: SV1: _opts
 2318: @
 2319: "list"
 2320: ARRAY_GETITEM
 2321: ARRAY_GET_PROPLIST
 2322: SV5: _lines
 2323: !
 2324: SV5: _lines
 2325: @
 2326: 1
 2327: 999999
 2328: LV10: lsedit::insert_pos
 2329: @
 2330: Addr:879
 2331: EXECUTE
 2332: POP
 2333: SV5: _lines
 2334: @
 2335: SV2: _obj
 2336: @
 2337: SV1: _opts
 2338: @
 2339: "list"
 2340: ARRAY_GETITEM
 2341: Addr:1334
 2342: EXECUTE
 2343: DUP
 2344: DUP
 2345: 0
 2346: ARRAY_GETITEM
 2347: SV3: _cmd
 2348: !
 2349: DUP
 2350: 1
 2351: ARRAY_GETITEM
 2352: SV4: _args
 2353: !
 2354: DUP
 2355: 2
 2356: ARRAY_GETITEM
 2357: SV5: _lines
 2358: !
 2359: POP
 2360: POP
 2361: {
 2362: ".x"
 2363: ".q"
 2364: }
 2365: ARRAY_MAKE
 2366: SV3: _cmd
 2367: @
 2368: ARRAY_FINDVAL
 2369: JmpIfFalse: +2
 2370: JMP: +10
 2371: SV3: _cmd
 2372: @
 2373: "Unrecognized editor command '%s'."
 2374: FMTSTRING
 2375: LV0: me
 2376: @
 2377: SWAP
 2378: NOTIFY
 2379: JMP: -46
 2380: {
 2381: SV3: _cmd
 2382: @
 2383: SV4: _args
 2384: @
 2385: SV5: _lines
 2386: @
 2387: }
 2388: ARRAY_MAKE
 2389: EXIT

 2390: Function: _main
 2391: SV0: _arg
 2392: !
 2393: Addr:795
 2394: EXECUTE
 2395: POP
 2396: SV0: _arg
 2397: @
 2398: Addr:2209
 2399: EXECUTE
 2400: EXIT

 2401: Function: __start
 2402: "me"
 2403: MATCH
 2404: LV0: me
 2405: !
 2406: LV0: me
 2407: @
 2408: LOCATION
 2409: LV1: loc
 2410: !
 2411: TRIG
 2412: LV2: trigger
 2413: !
 2414: ""
 2415: LV4: argparse::current_mode
 2416: !
 2417: {
 2418: }
 2419: ARRAY_MAKE
 2420: LV5: argparse::modes_list
 2421: !
 2422: {
 2423: }
 2424: 2
 2425: /
 2426: ARRAY_MAKE_DICT
 2427: LV6: argparse::flags_map
 2428: !
 2429: {
 2430: }
 2431: 2
 2432: /
 2433: ARRAY_MAKE_DICT
 2434: LV7: argparse::posargs_map
 2435: !
 2436: {
 2437: ""
 2438: "remainder"
 2439: }
 2440: 2
 2441: /
 2442: ARRAY_MAKE_DICT
 2443: LV8: argparse::remainder_map
 2444: !
 2445: {
 2446: }
 2447: ARRAY_MAKE
 2448: LV9: lsedit::help_lines
 2449: !
 2450: Addr:2390
 2451: EXECUTE
 2452: EXIT

#### Executing Tokens #################################
 2401: line 550 ("") Function: __start
 2402: line 551 ("") "me"
 2403: line 551 ("", "me") MATCH
 2404: line 551 ("", #5) LV0: me
 2405: line 551 ("", #5, LV0) !
 2406: line 551 ("") LV0: me
 2407: line 551 ("", LV0) @
 2408: line 551 ("", #5) LOCATION
 2409: line 551 ("", #2) LV1: loc
 2410: line 551 ("", #2, LV1) !
 2411: line 551 ("") TRIG
 2412: line 551 ("", #3) LV2: trigger
 2413: line 551 ("", #3, LV2) !
 2414: line 552 ("") ""
 2415: line 552 ("", "") LV4: argparse::current_mode
 2416: line 552 ("", "", LV4) !
 2417: line 553 ("") {
 2418: line 553 ("", Mark) }
 2419: line 553 ("", 0) ARRAY_MAKE
 2420: line 553 ("", []) LV5: argparse::modes_list
 2421: line 553 ("", [], LV5) !
 2422: line 554 ("") {
 2423: line 554 ("", Mark) }
 2424: line 554 ("", 0) 2
 2425: line 554 ("", 0, 2) /
 2426: line 554 ("", 0) ARRAY_MAKE_DICT
 2427: line 554 ("", {}) LV6: argparse::flags_map
 2428: line 554 ("", {}, LV6) !
 2429: line 555 ("") {
 2430: line 555 ("", Mark) }
 2431: line 555 ("", 0) 2
 2432: line 555 ("", 0, 2) /
 2433: line 555 ("", 0) ARRAY_MAKE_DICT
 2434: line 555 ("", {}) LV7: argparse::posargs_map
 2435: line 555 ("", {}, LV7) !
 2436: line 556 ("") {
 2437: line 556 ("", Mark) ""
 2438: line 556 ("", Mark, "") "remainder"
 2439: line 556 ("", Mark, "", "remainder") }
 2440: line 556 ("", "", "remainder", 2) 2
 2441: line 556 ("", "", "remainder", 2, 2) /
 2442: line 556 ("", "", "remainder", 1) ARRAY_MAKE_DICT
 2443: line 556 ("", {'': 'remainder'}) LV8: argparse::remainder_map
 2444: line 556 ("", {'': 'remainder'}, LV8) !
 2445: line 557 ("") {
 2446: line 557 ("", Mark) }
 2447: line 557 ("", 0) ARRAY_MAKE
 2448: line 557 ("", []) LV9: lsedit::help_lines
 2449: line 557 ("", [], LV9) !
 2450: line 558 ("") Addr:2390
 2451: line 558 ("", Addr:2390) EXECUTE
 2390: line 546 ("") Function: _main
 2391: line 546 ("") SV0: _arg
 2392: line 546 ("", SV0) !
 2393: line 547 () Addr:795
 2394: line 547 (Addr:795) EXECUTE
  795: line 207 () Function: lsedit__init_help
  796: line 208 () {
  797: line 208 (Mark) }
  798: line 208 (0) ARRAY_MAKE
  799: line 208 ([]) LV9: lsedit::help_lines
  800: line 208 ([], LV9) !
  801: line 209 () 0
  802: line 210 (0) EXIT
 2395: line 547 (0) POP
 2396: line 548 () SV0: _arg
 2397: line 548 (SV0) @
 2398: line 548 ("") Addr:2209
 2399: line 548 ("", Addr:2209) EXECUTE
 2209: line 510 ("") Function: lsedit__basic
 2210: line 510 ("") SV0: _arg
 2211: line 510 ("", SV0) !
 2212: line 512 () Addr:0
 2213: line 512 (Addr:0) EXECUTE
    0: line 12 () Function: argparse::init
    1: line 13 () ""
    2: line 13 ("") LV4: argparse::current_mode
    3: line 13 ("", LV4) !
    4: line 14 () {
    5: line 14 (Mark) }
    6: line 14 (0) ARRAY_MAKE
    7: line 14 ([]) LV5: argparse::modes_list
    8: line 14 ([], LV5) !
    9: line 15 () {
   10: line 15 (Mark) }
   11: line 15 (0) 2
   12: line 15 (0, 2) /
   13: line 15 (0) ARRAY_MAKE_DICT
   14: line 15 ({}) LV6: argparse::flags_map
   15: line 15 ({}, LV6) !
   16: line 16 () {
   17: line 16 (Mark) }
   18: line 16 (0) 2
   19: line 16 (0, 2) /
   20: line 16 (0) ARRAY_MAKE_DICT
   21: line 16 ({}) LV7: argparse::posargs_map
   22: line 16 ({}, LV7) !
   23: line 17 () {
   24: line 17 (Mark) ""
   25: line 17 (Mark, "") "remainder"
   26: line 17 (Mark, "", "remainder") }
   27: line 17 ("", "remainder", 2) 2
   28: line 17 ("", "remainder", 2, 2) /
   29: line 17 ("", "remainder", 1) ARRAY_MAKE_DICT
   30: line 17 ({'': 'remainder'}) LV8: argparse::remainder_map
   31: line 17 ({'': 'remainder'}, LV8) !
   32: line 18 () 0
   33: line 19 (0) EXIT
 2214: line 512 (0) POP
 2215: line 513 () ""
 2216: line 513 ("") Addr:122
 2217: line 513 ("", Addr:122) EXECUTE
  122: line 41 ("") Function: argparse::set_mode
  123: line 41 ("") SV0: _name
  124: line 41 ("", SV0) !
  125: line 42 () SV0: _name
  126: line 42 (SV0) @
  127: line 42 ("") TOLOWER
  128: line 42 ("") SV0: _name
  129: line 42 ("", SV0) !
  130: line 43 () SV0: _name
  131: line 43 (SV0) @
  132: line 43 ("") LV4: argparse::current_mode
  133: line 43 ("", LV4) !
  134: line 44 () 0
  135: line 45 (0) EXIT
 2218: line 513 (0) POP
 2219: line 514 () ""
 2220: line 514 ("") {
 2221: line 514 ("", Mark) }
 2222: line 514 ("", 0) ARRAY_MAKE
 2223: line 514 ("", []) "obj=list"
 2224: line 514 ("", [], "obj=list") Addr:136
 2225: line 514 ("", [], "obj=list", Addr:136) EXECUTE
  136: line 46 ("", [], "obj=list") Function: argparse::add_mode
  137: line 46 ("", [], "obj=list") SV2: _posargs
  138: line 46 ("", [], "obj=list", SV2) !
  139: line 46 ("", []) SV1: _flags
  140: line 46 ("", [], SV1) !
  141: line 46 ("") SV0: _name
  142: line 46 ("", SV0) !
  143: line 48 () SV0: _name
  144: line 48 (SV0) @
  145: line 48 ("") TOLOWER
  146: line 48 ("") SV0: _name
  147: line 48 ("", SV0) !
  148: line 49 () LV5: argparse::modes_list
  149: line 49 (LV5) @
  150: line 49 ([]) SV0: _name
  151: line 49 ([], SV0) @
  152: line 49 ([], "") SWAP
  153: line 49 ("", []) ARRAY_APPENDITEM
  154: line 49 (['']) LV5: argparse::modes_list
  155: line 49 ([''], LV5) !
  156: line 50 () {
  157: line 50 (Mark) }
  158: line 50 (0) ARRAY_MAKE
  159: line 50 ([]) DUP
  160: line 51 ([], []) LV6: argparse::flags_map
  161: line 51 ([], [], LV6) @
  162: line 51 ([], [], {}) SV0: _name
  163: line 51 ([], [], {}, SV0) @
  164: line 51 ([], [], {}, "") ARRAY_SETITEM
  165: line 51 ([], {'': []}) LV6: argparse::flags_map
  166: line 51 ([], {'': []}, LV6) !
  167: line 51 ([]) POP
  168: line 52 () {
  169: line 52 (Mark) }
  170: line 52 (0) ARRAY_MAKE
  171: line 52 ([]) DUP
  172: line 53 ([], []) LV7: argparse::posargs_map
  173: line 53 ([], [], LV7) @
  174: line 53 ([], [], {}) SV0: _name
  175: line 53 ([], [], {}, SV0) @
  176: line 53 ([], [], {}, "") ARRAY_SETITEM
  177: line 53 ([], {'': []}) LV7: argparse::posargs_map
  178: line 53 ([], {'': []}, LV7) !
  179: line 53 ([]) POP
  180: line 54 () SV1: _flags
  181: line 54 (SV1) @
  182: line 54 ([]) FOREACH
  183: line 55 () __FORITER__
  184: line 55 (0) JmpIfFalse: +41
  225: line 54 () __FORPOP__
  226: line 63 () SV0: _name
  227: line 63 (SV0) @
  228: line 63 ("") SV2: _posargs
  229: line 63 ("", SV2) @
  230: line 63 ("", "obj=list") Addr:34
  231: line 63 ("", "obj=list", Addr:34) EXECUTE
   34: line 20 ("", "obj=list") Function: argparse::parse_posargs
   35: line 20 ("", "obj=list") SV1: _posargs
   36: line 20 ("", "obj=list", SV1) !
   37: line 20 ("") SV0: _mode
   38: line 20 ("", SV0) !
   39: line 23 () {
   40: line 23 (Mark) SV1: _posargs
   41: line 23 (Mark, SV1) @
   42: line 23 (Mark, "obj=list") "^([a-z0-9_]*)([^a-z0-9_])(.*)$"
   43: line 23 (Mark, "obj=list", "^([a-z0-9_]*)([^a-z0-9_])(.*)$") 1
   44: line 23 (Mark, "obj=list", "^([a-z0-9_]*)([^a-z0-9_])(.*)$", 1) REGEXP
   45: line 23 (Mark, ['obj=list', 'obj', '=', 'list'], [(0, 8), (0, 3), (3, 4), (4, 8)]) }
   46: line 23 (['obj=list', 'obj', '=', 'list'], [(0, 8), (0, 3), (3, 4), (4, 8)], 2) ARRAY_MAKE
   47: line 23 ([['obj=list', 'obj', '=', 'list'], [(0, 8), (0, 3), (3, 4), (4, 8)]]) 0
   48: line 23 ([['obj=list', 'obj', '=', 'list'], [(0, 8), (0, 3), (3, 4), (4, 8)]], 0) ARRAY_GETITEM
   49: line 24 (['obj=list', 'obj', '=', 'list']) SV2: _tok
   50: line 24 (['obj=list', 'obj', '=', 'list'], SV2) !
   51: line 25 () SV2: _tok
   52: line 25 (SV2) @
   53: line 25 (['obj=list', 'obj', '=', 'list']) JmpIfFalse: +53
   54: line 26 () LV7: argparse::posargs_map
   55: line 26 (LV7) @
   56: line 26 ({'': []}) SV0: _mode
   57: line 26 ({'': []}, SV0) @
   58: line 26 ({'': []}, "") ARRAY_GETITEM
   59: line 26 ([]) NOT
   60: line 26 (1) JmpIfFalse: +13
   61: line 27 () {
   62: line 27 (Mark) }
   63: line 27 (0) ARRAY_MAKE
   64: line 27 ([]) DUP
   65: line 28 ([], []) LV7: argparse::posargs_map
   66: line 28 ([], [], LV7) @
   67: line 28 ([], [], {'': []}) SV0: _mode
   68: line 28 ([], [], {'': []}, SV0) @
   69: line 28 ([], [], {'': []}, "") ARRAY_SETITEM
   70: line 28 ([], {'': []}) LV7: argparse::posargs_map
   71: line 28 ([], {'': []}, LV7) !
   72: line 28 ([]) POP
   73: line 30 () LV7: argparse::posargs_map
   74: line 30 (LV7) @
   75: line 30 ({'': []}) SV0: _mode
   76: line 30 ({'': []}, SV0) @
   77: line 30 ({'': []}, "") OVER
   78: line 30 ({'': []}, "", {'': []}) OVER
   79: line 30 ({'': []}, "", {'': []}, "") ARRAY_GETITEM
   80: line 31 ({'': []}, "", []) {
   81: line 31 ({'': []}, "", [], Mark) SV2: _tok
   82: line 31 ({'': []}, "", [], Mark, SV2) @
   83: line 31 ({'': []}, "", [], Mark, ['obj=list', 'obj', '=', 'list']) 1
   84: line 31 ({'': []}, "", [], Mark, ['obj=list', 'obj', '=', 'list'], 1) ARRAY_GETITEM
   85: line 31 ({'': []}, "", [], Mark, "obj") TOLOWER
   86: line 31 ({'': []}, "", [], Mark, "obj") SV2: _tok
   87: line 31 ({'': []}, "", [], Mark, "obj", SV2) @
   88: line 31 ({'': []}, "", [], Mark, "obj", ['obj=list', 'obj', '=', 'list']) 2
   89: line 31 ({'': []}, "", [], Mark, "obj", ['obj=list', 'obj', '=', 'list'], 2) ARRAY_GETITEM
   90: line 31 ({'': []}, "", [], Mark, "obj", "=") }
   91: line 31 ({'': []}, "", [], "obj", "=", 2) ARRAY_MAKE
   92: line 31 ({'': []}, "", [], ['obj', '=']) SWAP
   93: line 31 ({'': []}, "", ['obj', '='], []) ARRAY_APPENDITEM
   94: line 31 ({'': [['obj', '=']]}, "", [['obj', '=']]) ROT
   95: line 31 ("", [['obj', '=']], {'': [['obj', '=']]}) ROT
   96: line 31 ([['obj', '=']], {'': [['obj', '=']]}, "") ARRAY_SETITEM
   97: line 31 ({'': [['obj', '=']]}) LV7: argparse::posargs_map
   98: line 31 ({'': [['obj', '=']]}, LV7) !
   99: line 32 () SV2: _tok
  100: line 32 (SV2) @
  101: line 32 (['obj=list', 'obj', '=', 'list']) 3
  102: line 32 (['obj=list', 'obj', '=', 'list'], 3) ARRAY_GETITEM
  103: line 32 ("list") SV1: _posargs
  104: line 32 ("list", SV1) !
  105: line 25 () JMP: +14
  119: line 38 () JMP: -80
   39: line 23 () {
   40: line 23 (Mark) SV1: _posargs
   41: line 23 (Mark, SV1) @
   42: line 23 (Mark, "list") "^([a-z0-9_]*)([^a-z0-9_])(.*)$"
   43: line 23 (Mark, "list", "^([a-z0-9_]*)([^a-z0-9_])(.*)$") 1
   44: line 23 (Mark, "list", "^([a-z0-9_]*)([^a-z0-9_])(.*)$", 1) REGEXP
   45: line 23 (Mark, [], []) }
   46: line 23 ([], [], 2) ARRAY_MAKE
   47: line 23 ([[], []]) 0
   48: line 23 ([[], []], 0) ARRAY_GETITEM
   49: line 24 ([]) SV2: _tok
   50: line 24 ([], SV2) !
   51: line 25 () SV2: _tok
   52: line 25 (SV2) @
   53: line 25 ([]) JmpIfFalse: +53
  106: line 34 () SV1: _posargs
  107: line 34 (SV1) @
  108: line 34 ("list") TOLOWER
  109: line 34 ("list") DUP
  110: line 35 ("list", "list") LV8: argparse::remainder_map
  111: line 35 ("list", "list", LV8) @
  112: line 35 ("list", "list", {'': 'remainder'}) SV0: _mode
  113: line 35 ("list", "list", {'': 'remainder'}, SV0) @
  114: line 35 ("list", "list", {'': 'remainder'}, "") ARRAY_SETITEM
  115: line 35 ("list", {'': 'list'}) LV8: argparse::remainder_map
  116: line 35 ("list", {'': 'list'}, LV8) !
  117: line 35 ("list") POP
  118: line 36 () JMP: +2
  120: line 39 () 0
  121: line 40 (0) EXIT
  232: line 63 (0) POP
  233: line 64 () 0
  234: line 65 (0) EXIT
 2226: line 514 (0) POP
 2227: line 515 () SV0: _arg
 2228: line 515 (SV0) @
 2229: line 515 ("") Addr:480
 2230: line 515 ("", Addr:480) EXECUTE
  480: line 124 ("") Function: argparse::parse
  481: line 124 ("") SV0: _line
  482: line 124 ("", SV0) !
  483: line 127 () {
  484: line 127 (Mark) }
  485: line 127 (0) 2
  486: line 127 (0, 2) /
  487: line 127 (0) ARRAY_MAKE_DICT
  488: line 127 ({}) SV4: _opts
  489: line 127 ({}, SV4) !
  490: line 128 () 0
  491: line 128 (0) SV5: _mode_given
  492: line 128 (0, SV5) !
  493: line 130 () SV0: _line
  494: line 130 (SV0) @
  495: line 130 ("") "#"
  496: line 130 ("", "#") STRINGPFX
  497: line 131 (0) JmpIfFalse: +208
  705: line 189 () SV5: _mode_given
  706: line 189 (SV5) @
  707: line 189 (0) 1
  708: line 189 (0, 1) >
  709: line 189 (0) JmpIfFalse: +13
  722: line 194 () LV7: argparse::posargs_map
  723: line 194 (LV7) @
  724: line 194 ({'': [['obj', '=']]}) LV4: argparse::current_mode
  725: line 194 ({'': [['obj', '=']]}, LV4) @
  726: line 194 ({'': [['obj', '=']]}, "") ARRAY_GETITEM
  727: line 194 ([['obj', '=']]) FOREACH
  728: line 195 () __FORITER__
  729: line 195 (0, ['obj', '='], 1) JmpIfFalse: +38
  730: line 195 (0, ['obj', '=']) SV9: _posarg
  731: line 195 (0, ['obj', '='], SV9) !
  732: line 195 (0) POP
  733: line 196 () {
  734: line 196 (Mark) SV0: _line
  735: line 196 (Mark, SV0) @
  736: line 196 (Mark, "") SV9: _posarg
  737: line 196 (Mark, "", SV9) @
  738: line 196 (Mark, "", ['obj', '=']) 1
  739: line 196 (Mark, "", ['obj', '='], 1) ARRAY_GETITEM
  740: line 196 (Mark, "", "=") SPLIT
  741: line 196 (Mark, "", "") }
  742: line 196 ("", "", 2) ARRAY_MAKE
  743: line 196 (['', '']) SV1: _parts
  744: line 196 (['', ''], SV1) !
  745: line 197 () SV1: _parts
  746: line 197 (SV1) @
  747: line 197 (['', '']) 0
  748: line 197 (['', ''], 0) ARRAY_GETITEM
  749: line 197 ("") DUP
  750: line 197 ("", "") SV4: _opts
  751: line 197 ("", "", SV4) @
  752: line 197 ("", "", {}) SV9: _posarg
  753: line 197 ("", "", {}, SV9) @
  754: line 197 ("", "", {}, ['obj', '=']) 0
  755: line 197 ("", "", {}, ['obj', '='], 0) ARRAY_GETITEM
  756: line 197 ("", "", {}, "obj") ARRAY_SETITEM
  757: line 197 ("", {'obj': ''}) SV4: _opts
  758: line 197 ("", {'obj': ''}, SV4) !
  759: line 197 ("") POP
  760: line 198 () SV1: _parts
  761: line 198 (SV1) @
  762: line 198 (['', '']) 1
  763: line 198 (['', ''], 1) ARRAY_GETITEM
  764: line 198 ("") SV0: _line
  765: line 198 ("", SV0) !
  766: line 199 () JMP: -38
  728: line 195 () __FORITER__
  729: line 195 (0) JmpIfFalse: +38
  767: line 194 () __FORPOP__
  768: line 200 () SV0: _line
  769: line 200 (SV0) @
  770: line 200 ("") DUP
  771: line 201 ("", "") SV4: _opts
  772: line 201 ("", "", SV4) @
  773: line 201 ("", "", {'obj': ''}) LV8: argparse::remainder_map
  774: line 201 ("", "", {'obj': ''}, LV8) @
  775: line 201 ("", "", {'obj': ''}, {'': 'list'}) LV4: argparse::current_mode
  776: line 201 ("", "", {'obj': ''}, {'': 'list'}, LV4) @
  777: line 201 ("", "", {'obj': ''}, {'': 'list'}, "") ARRAY_GETITEM
  778: line 201 ("", "", {'obj': ''}, "list") ARRAY_SETITEM
  779: line 201 ("", {'list': '', 'obj': ''}) SV4: _opts
  780: line 201 ("", {'list': '', 'obj': ''}, SV4) !
  781: line 201 ("") POP
  782: line 202 () LV4: argparse::current_mode
  783: line 202 (LV4) @
  784: line 202 ("") DUP
  785: line 202 ("", "") SV4: _opts
  786: line 202 ("", "", SV4) @
  787: line 202 ("", "", {'list': '', 'obj': ''}) "mode"
  788: line 202 ("", "", {'list': '', 'obj': ''}, "mode") ARRAY_SETITEM
  789: line 202 ("", {'list': '', 'obj': '', 'mode': ''}) SV4: _opts
  790: line 202 ("", {'list': '', 'obj': '', 'mode': ''}, SV4) !
  791: line 202 ("") POP
  792: line 203 () SV4: _opts
  793: line 203 (SV4) @
  794: line 204 ({'list': '', 'obj': '', 'mode': ''}) EXIT
 2231: line 515 ({'list': '', 'obj': '', 'mode': ''}) SV1: _opts
 2232: line 515 ({'list': '', 'obj': '', 'mode': ''}, SV1) !
 2233: line 516 () SV1: _opts
 2234: line 516 (SV1) @
 2235: line 516 ({'list': '', 'obj': '', 'mode': ''}) NOT
 2236: line 516 (0) JmpIfFalse: +3
 2239: line 517 () SV1: _opts
 2240: line 517 (SV1) @
 2241: line 517 ({'list': '', 'obj': '', 'mode': ''}) "obj"
 2242: line 517 ({'list': '', 'obj': '', 'mode': ''}, "obj") ARRAY_GETITEM
 2243: line 517 ("") NOT
 2244: line 518 (1) DUP
 2245: line 518 (1, 1) NOT
 2246: line 518 (1, 0) JmpIfFalse: +7
 2253: line 518 (1) JmpIfFalse: +6
 2254: line 519 () Addr:350
 2255: line 519 (Addr:350) EXECUTE
  350: line 100 () Function: argparse::show_usage
  351: line 103 () TRIG
  352: line 103 (#3) NAME
  353: line 103 ("test") ";"
  354: line 103 ("test", ";") SPLIT
  355: line 103 ("test", "") POP
  356: line 103 ("test") STRIPLEAD
  357: line 103 ("test") STRIPTAIL
  358: line 103 ("test") SV0: _cmd
  359: line 103 ("test", SV0) !
  360: line 104 () "Usage:"
  361: line 104 ("Usage:") LV0: me
  362: line 104 ("Usage:", LV0) @
  363: line 104 ("Usage:", #5) SWAP
  364: line 104 (#5, "Usage:") NOTIFY
NOTIFY TO #5: Usage:
  365: line 105 () LV5: argparse::modes_list
  366: line 105 (LV5) @
  367: line 105 (['']) FOREACH
  368: line 106 () __FORITER__
  369: line 106 (0, "", 1) JmpIfFalse: +108
  370: line 106 (0, "") SV1: _mode
  371: line 106 (0, "", SV1) !
  372: line 106 (0) POP
  373: line 107 () {
  374: line 107 (Mark) }
  375: line 107 (0) ARRAY_MAKE
  376: line 107 ([]) LV6: argparse::flags_map
  377: line 107 ([], LV6) @
  378: line 107 ([], {'': []}) SV1: _mode
  379: line 107 ([], {'': []}, SV1) @
  380: line 107 ([], {'': []}, "") ARRAY_GETITEM
  381: line 107 ([], []) FOREACH
  382: line 108 ([]) __FORITER__
  383: line 108 ([], 0) JmpIfFalse: +16
  399: line 107 ([]) __FORPOP__
  400: line 110 ([]) SV2: _flags
  401: line 110 ([], SV2) !
  402: line 111 () {
  403: line 111 (Mark) }
  404: line 111 (0) ARRAY_MAKE
  405: line 111 ([]) LV7: argparse::posargs_map
  406: line 111 ([], LV7) @
  407: line 111 ([], {'': [['obj', '=']]}) SV1: _mode
  408: line 111 ([], {'': [['obj', '=']]}, SV1) @
  409: line 111 ([], {'': [['obj', '=']]}, "") ARRAY_GETITEM
  410: line 111 ([], [['obj', '=']]) FOREACH
  411: line 112 ([]) __FORITER__
  412: line 112 ([], 0, ['obj', '='], 1) JmpIfFalse: +21
  413: line 112 ([], 0, ['obj', '=']) SV5: _posarg
  414: line 112 ([], 0, ['obj', '='], SV5) !
  415: line 112 ([], 0) POP
  416: line 113 ([]) {
  417: line 113 ([], Mark) SV5: _posarg
  418: line 113 ([], Mark, SV5) @
  419: line 113 ([], Mark, ['obj', '=']) 0
  420: line 113 ([], Mark, ['obj', '='], 0) ARRAY_GETITEM
  421: line 113 ([], Mark, "obj") TOUPPER
  422: line 113 ([], Mark, "OBJ") SV5: _posarg
  423: line 113 ([], Mark, "OBJ", SV5) @
  424: line 113 ([], Mark, "OBJ", ['obj', '=']) 1
  425: line 113 ([], Mark, "OBJ", ['obj', '='], 1) ARRAY_GETITEM
  426: line 113 ([], Mark, "OBJ", "=") }
  427: line 113 ([], "OBJ", "=", 2) ARRAY_MAKE
  428: line 113 ([], ['OBJ', '=']) ""
  429: line 113 ([], ['OBJ', '='], "") ARRAY_JOIN
  430: line 114 ([], "OBJ=") SWAP
  431: line 114 ("OBJ=", []) ARRAY_APPENDITEM
  432: line 115 (['OBJ=']) JMP: -21
  411: line 112 (['OBJ=']) __FORITER__
  412: line 112 (['OBJ='], 0) JmpIfFalse: +21
  433: line 111 (['OBJ=']) __FORPOP__
  434: line 115 (['OBJ=']) SV4: _posargs
  435: line 115 (['OBJ='], SV4) !
  436: line 116 () LV8: argparse::remainder_map
  437: line 116 (LV8) @
  438: line 116 ({'': 'list'}) SV1: _mode
  439: line 116 ({'': 'list'}, SV1) @
  440: line 116 ({'': 'list'}, "") ARRAY_GETITEM
  441: line 116 ("list") TOUPPER
  442: line 117 ("LIST") SV4: _posargs
  443: line 117 ("LIST", SV4) @
  444: line 117 ("LIST", ['OBJ=']) ""
  445: line 117 ("LIST", ['OBJ='], "") ARRAY_JOIN
  446: line 117 ("LIST", "OBJ=") SV2: _flags
  447: line 117 ("LIST", "OBJ=", SV2) @
  448: line 117 ("LIST", "OBJ=", []) JmpIfFalse: +3
  451: line 117 ("LIST", "OBJ=") ""
  452: line 118 ("LIST", "OBJ=", "") SV2: _flags
  453: line 118 ("LIST", "OBJ=", "", SV2) @
  454: line 118 ("LIST", "OBJ=", "", []) " "
  455: line 118 ("LIST", "OBJ=", "", [], " ") ARRAY_JOIN
  456: line 118 ("LIST", "OBJ=", "", "") SV1: _mode
  457: line 118 ("LIST", "OBJ=", "", "", SV1) @
  458: line 118 ("LIST", "OBJ=", "", "", "") SV1: _mode
  459: line 118 ("LIST", "OBJ=", "", "", "", SV1) @
  460: line 118 ("LIST", "OBJ=", "", "", "", "") JmpIfFalse: +3
  463: line 118 ("LIST", "OBJ=", "", "", "") ""
  464: line 119 ("LIST", "OBJ=", "", "", "", "") SV0: _cmd
  465: line 119 ("LIST", "OBJ=", "", "", "", "", SV0) @
  466: line 119 ("LIST", "OBJ=", "", "", "", "", "test") "%s %s%s %s%s%s%s"
  467: line 119 ("LIST", "OBJ=", "", "", "", "", "test", "%s %s%s %s%s%s%s") FMTSTRING
  468: line 119 ("test  OBJ=LIST") SV6: _line
  469: line 119 ("test  OBJ=LIST", SV6) !
  470: line 120 () SV6: _line
  471: line 120 (SV6) @
  472: line 120 ("test  OBJ=LIST") LV0: me
  473: line 120 ("test  OBJ=LIST", LV0) @
  474: line 120 ("test  OBJ=LIST", #5) SWAP
  475: line 120 (#5, "test  OBJ=LIST") NOTIFY
NOTIFY TO #5: test  OBJ=LIST
  476: line 121 () JMP: -108
  368: line 106 () __FORITER__
  369: line 106 (0) JmpIfFalse: +108
  477: line 105 () __FORPOP__
  478: line 122 () 0
  479: line 123 (0) EXIT
 2256: line 519 (0) POP
 2257: line 520 () 0
 2258: line 520 (0) EXIT
 2400: line 549 (0) EXIT
 2452: line 559 (0) EXIT
Execution completed in 536 steps.
