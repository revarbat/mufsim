#### Compiling MUV Code to MUF ########################

#### Compiling MUF Program Untitled.muf(#4) ###########
SETPROP "_author" on #4 = "Revar Desmera <revar@gmail.com>"
SETPROP "_note" on #4 = "An example replacement for the lsedit program, written in MUV."
SETPROP "_version" on #4 = "1.0"
SETPROP "_lib-version" on #4 = "1.0"
EXPOSED 'lsedit__init_help' AS PUBLIC
SETPROP "_defs/lsedit__init_help" on #4 = "#4 \"lsedit__init_help\" call"
EXPOSED 'lsedit__show_help' AS PUBLIC
SETPROP "_defs/lsedit__show_help" on #4 = "#4 \"lsedit__show_help\" call"
EXPOSED 'lsedit__add_helptext' AS PUBLIC
SETPROP "_defs/lsedit__add_helptext" on #4 = "#4 \"lsedit__add_helptext\" call"
EXPOSED 'lsedit__editor' AS PUBLIC
SETPROP "_defs/lsedit__editor" on #4 = "#4 \"lsedit__editor\" call"
EXPOSED 'lsedit__basic' AS PUBLIC
SETPROP "_defs/lsedit__basic" on #4 = "#4 \"lsedit__basic\" call"

#### Showing Tokens for Untitled.muf(#4) ##############
    0: Function: argparse::init (0 vars)
    1: ""
    2: LV4: argparse::current_mode
    3: !
    4: {
    5: }
    6: ARRAY_MAKE
    7: LV5: argparse::modes_list
    8: !
    9: {
   10: }
   11: 2
   12: /
   13: ARRAY_MAKE_DICT
   14: LV6: argparse::flags_map
   15: !
   16: {
   17: }
   18: 2
   19: /
   20: ARRAY_MAKE_DICT
   21: LV7: argparse::posargs_map
   22: !
   23: {
   24: ""
   25: "remainder"
   26: }
   27: 2
   28: /
   29: ARRAY_MAKE_DICT
   30: LV8: argparse::remainder_map
   31: !
   32: 0
   33: EXIT

   34: Function: argparse::parse_posargs (2 vars)
   35: {
   36: SV1: _posargs
   37: @
   38: "^([a-z0-9_]*)([^a-z0-9_])(.*)$"
   39: 1
   40: REGEXP
   41: }
   42: ARRAY_MAKE
   43: 0
   44: ARRAY_GETITEM
   45: SV2: _tok
   46: !
   47: SV2: _tok
   48: @
   49: JmpIfFalse: 102
   50: LV7: argparse::posargs_map
   51: @
   52: SV0: _mode
   53: @
   54: ARRAY_GETITEM
   55: NOT
   56: JmpIfFalse: 69
   57: {
   58: }
   59: ARRAY_MAKE
   60: DUP
   61: LV7: argparse::posargs_map
   62: @
   63: SV0: _mode
   64: @
   65: ARRAY_SETITEM
   66: LV7: argparse::posargs_map
   67: !
   68: POP
   69: LV7: argparse::posargs_map
   70: @
   71: SV0: _mode
   72: @
   73: OVER
   74: OVER
   75: ARRAY_GETITEM
   76: {
   77: SV2: _tok
   78: @
   79: 1
   80: ARRAY_GETITEM
   81: TOLOWER
   82: SV2: _tok
   83: @
   84: 2
   85: ARRAY_GETITEM
   86: }
   87: ARRAY_MAKE
   88: SWAP
   89: ARRAY_APPENDITEM
   90: ROT
   91: ROT
   92: ARRAY_SETITEM
   93: LV7: argparse::posargs_map
   94: !
   95: SV2: _tok
   96: @
   97: 3
   98: ARRAY_GETITEM
   99: SV1: _posargs
  100: !
  101: JMP: 115
  102: SV1: _posargs
  103: @
  104: TOLOWER
  105: DUP
  106: LV8: argparse::remainder_map
  107: @
  108: SV0: _mode
  109: @
  110: ARRAY_SETITEM
  111: LV8: argparse::remainder_map
  112: !
  113: POP
  114: JMP: 116
  115: JMP: 35
  116: 0
  117: EXIT

  118: Function: argparse::set_mode (1 vars)
  119: SV0: _name
  120: @
  121: TOLOWER
  122: SV0: _name
  123: !
  124: SV0: _name
  125: @
  126: LV4: argparse::current_mode
  127: !
  128: 0
  129: EXIT

  130: Function: argparse::add_mode (3 vars)
  131: SV0: _name
  132: @
  133: TOLOWER
  134: SV0: _name
  135: !
  136: LV5: argparse::modes_list
  137: @
  138: SV0: _name
  139: @
  140: SWAP
  141: ARRAY_APPENDITEM
  142: LV5: argparse::modes_list
  143: !
  144: {
  145: }
  146: ARRAY_MAKE
  147: DUP
  148: LV6: argparse::flags_map
  149: @
  150: SV0: _name
  151: @
  152: ARRAY_SETITEM
  153: LV6: argparse::flags_map
  154: !
  155: POP
  156: {
  157: }
  158: ARRAY_MAKE
  159: DUP
  160: LV7: argparse::posargs_map
  161: @
  162: SV0: _name
  163: @
  164: ARRAY_SETITEM
  165: LV7: argparse::posargs_map
  166: !
  167: POP
  168: SV1: _flags
  169: @
  170: FOREACH
  171: __FORITER__
  172: JmpIfFalse: 213
  173: SV3: _flag
  174: !
  175: POP
  176: LV6: argparse::flags_map
  177: @
  178: SV0: _name
  179: @
  180: ARRAY_GETITEM
  181: NOT
  182: JmpIfFalse: 195
  183: {
  184: }
  185: ARRAY_MAKE
  186: DUP
  187: LV6: argparse::flags_map
  188: @
  189: SV0: _name
  190: @
  191: ARRAY_SETITEM
  192: LV6: argparse::flags_map
  193: !
  194: POP
  195: LV6: argparse::flags_map
  196: @
  197: SV0: _name
  198: @
  199: OVER
  200: OVER
  201: ARRAY_GETITEM
  202: SV3: _flag
  203: @
  204: TOLOWER
  205: SWAP
  206: ARRAY_APPENDITEM
  207: ROT
  208: ROT
  209: ARRAY_SETITEM
  210: LV6: argparse::flags_map
  211: !
  212: JMP: 171
  213: __FORPOP__
  214: SV0: _name
  215: @
  216: SV2: _posargs
  217: @
  218: Addr:'#4'34
  219: EXECUTE
  220: POP
  221: 0
  222: EXIT

  223: Function: argparse::add_flag (1 vars)
  224: SV0: _name
  225: @
  226: TOLOWER
  227: SV0: _name
  228: !
  229: LV5: argparse::modes_list
  230: @
  231: FOREACH
  232: __FORITER__
  233: JmpIfFalse: 292
  234: SV1: _mode
  235: !
  236: POP
  237: SV1: _mode
  238: @
  239: TOLOWER
  240: SV1: _mode
  241: !
  242: LV5: argparse::modes_list
  243: @
  244: SV1: _mode
  245: @
  246: ARRAY_FINDVAL
  247: NOT
  248: JmpIfFalse: 256
  249: SV1: _mode
  250: @
  251: SV0: _name
  252: @
  253: "ArgParse: Option '%s' declared as part of non-existent mode '%s'!"
  254: FMTSTRING
  255: ABORT
  256: LV6: argparse::flags_map
  257: @
  258: SV1: _mode
  259: @
  260: ARRAY_GETITEM
  261: NOT
  262: JmpIfFalse: 275
  263: {
  264: }
  265: ARRAY_MAKE
  266: DUP
  267: LV6: argparse::flags_map
  268: @
  269: SV1: _mode
  270: @
  271: ARRAY_SETITEM
  272: LV6: argparse::flags_map
  273: !
  274: POP
  275: LV6: argparse::flags_map
  276: @
  277: SV1: _mode
  278: @
  279: OVER
  280: OVER
  281: ARRAY_GETITEM
  282: SV0: _name
  283: @
  284: SWAP
  285: ARRAY_APPENDITEM
  286: ROT
  287: ROT
  288: ARRAY_SETITEM
  289: LV6: argparse::flags_map
  290: !
  291: JMP: 232
  292: __FORPOP__
  293: 0
  294: EXIT

  295: Function: argparse::add_posargs (1 vars)
  296: LV5: argparse::modes_list
  297: @
  298: FOREACH
  299: __FORITER__
  300: JmpIfFalse: 331
  301: SV1: _mode
  302: !
  303: POP
  304: SV1: _mode
  305: @
  306: TOLOWER
  307: SV1: _mode
  308: !
  309: LV5: argparse::modes_list
  310: @
  311: SV1: _mode
  312: @
  313: ARRAY_FINDVAL
  314: NOT
  315: JmpIfFalse: 323
  316: SV1: _mode
  317: @
  318: SV1: _mode
  319: @
  320: "ArgParse: Option '%s' declared as part of non-existent mode '%s'!"
  321: FMTSTRING
  322: ABORT
  323: SV1: _mode
  324: @
  325: SV0: _posargs
  326: @
  327: Addr:'#4'34
  328: EXECUTE
  329: POP
  330: JMP: 299
  331: __FORPOP__
  332: 0
  333: EXIT

  334: Function: argparse::show_usage (0 vars)
  335: TRIG
  336: NAME
  337: ";"
  338: SPLIT
  339: POP
  340: STRIPLEAD
  341: STRIPTAIL
  342: SV0: _cmd
  343: !
  344: "Usage:"
  345: LV0: me
  346: @
  347: SWAP
  348: NOTIFY
  349: LV5: argparse::modes_list
  350: @
  351: FOREACH
  352: __FORITER__
  353: JmpIfFalse: 461
  354: SV1: _mode
  355: !
  356: POP
  357: {
  358: }
  359: ARRAY_MAKE
  360: LV6: argparse::flags_map
  361: @
  362: SV1: _mode
  363: @
  364: ARRAY_GETITEM
  365: FOREACH
  366: __FORITER__
  367: JmpIfFalse: 383
  368: SV3: _flag
  369: !
  370: POP
  371: {
  372: "[#"
  373: SV3: _flag
  374: @
  375: "]"
  376: }
  377: ARRAY_MAKE
  378: ""
  379: ARRAY_JOIN
  380: SWAP
  381: ARRAY_APPENDITEM
  382: JMP: 366
  383: __FORPOP__
  384: SV2: _flags
  385: !
  386: {
  387: }
  388: ARRAY_MAKE
  389: LV7: argparse::posargs_map
  390: @
  391: SV1: _mode
  392: @
  393: ARRAY_GETITEM
  394: FOREACH
  395: __FORITER__
  396: JmpIfFalse: 417
  397: SV5: _posarg
  398: !
  399: POP
  400: {
  401: SV5: _posarg
  402: @
  403: 0
  404: ARRAY_GETITEM
  405: TOUPPER
  406: SV5: _posarg
  407: @
  408: 1
  409: ARRAY_GETITEM
  410: }
  411: ARRAY_MAKE
  412: ""
  413: ARRAY_JOIN
  414: SWAP
  415: ARRAY_APPENDITEM
  416: JMP: 395
  417: __FORPOP__
  418: SV4: _posargs
  419: !
  420: LV8: argparse::remainder_map
  421: @
  422: SV1: _mode
  423: @
  424: ARRAY_GETITEM
  425: TOUPPER
  426: SV4: _posargs
  427: @
  428: ""
  429: ARRAY_JOIN
  430: SV2: _flags
  431: @
  432: JmpIfFalse: 435
  433: " "
  434: JMP: 436
  435: ""
  436: SV2: _flags
  437: @
  438: " "
  439: ARRAY_JOIN
  440: SV1: _mode
  441: @
  442: SV1: _mode
  443: @
  444: JmpIfFalse: 447
  445: "#"
  446: JMP: 448
  447: ""
  448: SV0: _cmd
  449: @
  450: "%s %s%s %s%s%s%s"
  451: FMTSTRING
  452: SV6: _line
  453: !
  454: SV6: _line
  455: @
  456: LV0: me
  457: @
  458: SWAP
  459: NOTIFY
  460: JMP: 352
  461: __FORPOP__
  462: 0
  463: EXIT

  464: Function: argparse::parse (1 vars)
  465: {
  466: }
  467: 2
  468: /
  469: ARRAY_MAKE_DICT
  470: SV4: _opts
  471: !
  472: 0
  473: SV5: _mode_given
  474: !
  475: SV0: _line
  476: @
  477: "#"
  478: STRINGPFX
  479: JmpIfFalse: 687
  480: {
  481: {
  482: SV0: _line
  483: @
  484: 1
  485: STRCUT
  486: }
  487: ARRAY_MAKE
  488: 1
  489: ARRAY_GETITEM
  490: " "
  491: SPLIT
  492: }
  493: ARRAY_MAKE
  494: SV1: _parts
  495: !
  496: SV1: _parts
  497: @
  498: 0
  499: ARRAY_GETITEM
  500: SV6: _opt
  501: !
  502: SV6: _opt
  503: @
  504: TOLOWER
  505: SV7: _lc_opt
  506: !
  507: 0
  508: SV8: _found
  509: !
  510: LV5: argparse::modes_list
  511: @
  512: FOREACH
  513: __FORITER__
  514: JmpIfFalse: 533
  515: SV2: _mode
  516: !
  517: POP
  518: SV2: _mode
  519: @
  520: SV7: _lc_opt
  521: @
  522: STRINGCMP
  523: NOT
  524: JmpIfFalse: 532
  525: SV2: _mode
  526: @
  527: LV4: argparse::current_mode
  528: !
  529: SV8: _found
  530: ++
  531: JMP: 533
  532: JMP: 513
  533: __FORPOP__
  534: SV8: _found
  535: @
  536: JmpIfFalse: 546
  537: SV5: _mode_given
  538: ++
  539: SV1: _parts
  540: @
  541: 1
  542: ARRAY_GETITEM
  543: SV0: _line
  544: !
  545: JMP: 475
  546: LV6: argparse::flags_map
  547: @
  548: LV4: argparse::current_mode
  549: @
  550: ARRAY_GETITEM
  551: FOREACH
  552: __FORITER__
  553: JmpIfFalse: 579
  554: SV3: _flag
  555: !
  556: POP
  557: SV3: _flag
  558: @
  559: SV7: _lc_opt
  560: @
  561: STRINGCMP
  562: NOT
  563: JmpIfFalse: 578
  564: SV6: _opt
  565: @
  566: DUP
  567: SV4: _opts
  568: @
  569: SV3: _flag
  570: @
  571: ARRAY_SETITEM
  572: SV4: _opts
  573: !
  574: POP
  575: SV8: _found
  576: ++
  577: JMP: 579
  578: JMP: 552
  579: __FORPOP__
  580: SV8: _found
  581: @
  582: JmpIfFalse: 590
  583: SV1: _parts
  584: @
  585: 1
  586: ARRAY_GETITEM
  587: SV0: _line
  588: !
  589: JMP: 475
  590: LV5: argparse::modes_list
  591: @
  592: FOREACH
  593: __FORITER__
  594: JmpIfFalse: 611
  595: SV2: _mode
  596: !
  597: POP
  598: SV2: _mode
  599: @
  600: SV7: _lc_opt
  601: @
  602: STRINGPFX
  603: JmpIfFalse: 610
  604: SV2: _mode
  605: @
  606: LV4: argparse::current_mode
  607: !
  608: SV8: _found
  609: ++
  610: JMP: 593
  611: __FORPOP__
  612: LV6: argparse::flags_map
  613: @
  614: LV4: argparse::current_mode
  615: @
  616: ARRAY_GETITEM
  617: FOREACH
  618: __FORITER__
  619: JmpIfFalse: 643
  620: SV3: _flag
  621: !
  622: POP
  623: SV3: _flag
  624: @
  625: SV7: _lc_opt
  626: @
  627: STRINGPFX
  628: JmpIfFalse: 642
  629: SV6: _opt
  630: @
  631: DUP
  632: SV4: _opts
  633: @
  634: SV3: _flag
  635: @
  636: ARRAY_SETITEM
  637: SV4: _opts
  638: !
  639: POP
  640: SV8: _found
  641: ++
  642: JMP: 618
  643: __FORPOP__
  644: SV8: _found
  645: @
  646: 1
  647: =
  648: JmpIfFalse: 657
  649: SV1: _parts
  650: @
  651: 1
  652: ARRAY_GETITEM
  653: SV0: _line
  654: !
  655: JMP: 475
  656: JMP: 679
  657: SV8: _found
  658: @
  659: 1
  660: >
  661: JmpIfFalse: 671
  662: SV6: _opt
  663: @
  664: "Option #%s is ambiguous."
  665: FMTSTRING
  666: LV0: me
  667: @
  668: SWAP
  669: NOTIFY
  670: JMP: 679
  671: SV6: _opt
  672: @
  673: "Option #%s not recognized."
  674: FMTSTRING
  675: LV0: me
  676: @
  677: SWAP
  678: NOTIFY
  679: Addr:'#4'334
  680: EXECUTE
  681: POP
  682: {
  683: }
  684: ARRAY_MAKE
  685: EXIT
  686: JMP: 475
  687: SV5: _mode_given
  688: @
  689: 1
  690: >
  691: JmpIfFalse: 704
  692: "Cannot mix modes."
  693: LV0: me
  694: @
  695: SWAP
  696: NOTIFY
  697: Addr:'#4'334
  698: EXECUTE
  699: POP
  700: {
  701: }
  702: ARRAY_MAKE
  703: EXIT
  704: LV7: argparse::posargs_map
  705: @
  706: LV4: argparse::current_mode
  707: @
  708: ARRAY_GETITEM
  709: FOREACH
  710: __FORITER__
  711: JmpIfFalse: 749
  712: SV9: _posarg
  713: !
  714: POP
  715: {
  716: SV0: _line
  717: @
  718: SV9: _posarg
  719: @
  720: 1
  721: ARRAY_GETITEM
  722: SPLIT
  723: }
  724: ARRAY_MAKE
  725: SV1: _parts
  726: !
  727: SV1: _parts
  728: @
  729: 0
  730: ARRAY_GETITEM
  731: DUP
  732: SV4: _opts
  733: @
  734: SV9: _posarg
  735: @
  736: 0
  737: ARRAY_GETITEM
  738: ARRAY_SETITEM
  739: SV4: _opts
  740: !
  741: POP
  742: SV1: _parts
  743: @
  744: 1
  745: ARRAY_GETITEM
  746: SV0: _line
  747: !
  748: JMP: 710
  749: __FORPOP__
  750: SV0: _line
  751: @
  752: DUP
  753: SV4: _opts
  754: @
  755: LV8: argparse::remainder_map
  756: @
  757: LV4: argparse::current_mode
  758: @
  759: ARRAY_GETITEM
  760: ARRAY_SETITEM
  761: SV4: _opts
  762: !
  763: POP
  764: LV4: argparse::current_mode
  765: @
  766: DUP
  767: SV4: _opts
  768: @
  769: "mode"
  770: ARRAY_SETITEM
  771: SV4: _opts
  772: !
  773: POP
  774: SV4: _opts
  775: @
  776: EXIT

  777: Function: lsedit__init_help (0 vars)
  778: {
  779: }
  780: ARRAY_MAKE
  781: LV9: lsedit::help_lines
  782: !
  783: 0
  784: EXIT

  785: Function: lsedit__show_help (0 vars)
  786: {
  787: {
  788: "-- Commands: -----------------------------------------------------"
  789: "..LINE              Insert .LINE at current insertion position."
  790: ".h                  Show this help message."
  791: ".q                  Quit editor, saving changes."
  792: ".x                  Quit editor, aborting changes."
  793: ".l                  List all lines."
  794: ".l LINE             List given LINE."
  795: ".l LINE,LINE        List given LINE range, inclusive."
  796: ".i LINE             Move insertion to before LINE."
  797: ".d LINE             Delete LINE."
  798: ".d LINE,LINE        Delete given LINE range, inclusive."
  799: ".f                  Format all lines to 75 columns."
  800: ".f LINE,LINE        Format given line range to 75 columns."
  801: ".f LINE,LINE=COLS   Format given line range to COLS columns."
  802: ".s /FIND/REPL       Substitute regexp FIND with REPL in all lines."
  803: ".s LINE/FIND/REPL   Substitute regexp FIND with REPL in LINE."
  804: ".s L1,L2/FIND/REPL  Substitute FIND with REPL between L1 and L2."
  805: ".w                  Write/Save changes without exiting editor."
  806: ".w OBJ=PROP         Write/Save list to OBJ in proplist PROP."
  807: }
  808: ARRAY_MAKE
  809: LV9: lsedit::help_lines
  810: @
  811: {
  812: "------------------------------------------------------------------"
  813: }
  814: ARRAY_MAKE
  815: }
  816: ARRAY_MAKE
  817: {
  818: }
  819: ARRAY_MAKE
  820: SWAP
  821: ARRAY_REVERSE
  822: FOREACH
  823: __FORITER__
  824: JmpIfFalse: 831
  825: SWAP
  826: POP
  827: 0
  828: SWAP
  829: ARRAY_INSERTRANGE
  830: JMP: 823
  831: __FORPOP__
  832: FOREACH
  833: __FORITER__
  834: JmpIfFalse: 845
  835: SV0: _line
  836: !
  837: POP
  838: SV0: _line
  839: @
  840: LV0: me
  841: @
  842: SWAP
  843: NOTIFY
  844: JMP: 833
  845: __FORPOP__
  846: 0
  847: EXIT

  848: Function: lsedit__add_helptext (1 vars)
  849: LV9: lsedit::help_lines
  850: @
  851: SV0: _line
  852: @
  853: SWAP
  854: ARRAY_APPENDITEM
  855: LV9: lsedit::help_lines
  856: !
  857: 0
  858: EXIT

  859: Function: lsedit::show_list (4 vars)
  860: SV0: _lines
  861: @
  862: FOREACH
  863: __FORITER__
  864: JmpIfFalse: 905
  865: SV5: _line
  866: !
  867: SV4: _lnum
  868: !
  869: SV4: _lnum
  870: ++
  871: SV4: _lnum
  872: @
  873: SV1: _start
  874: @
  875: >=
  876: DUP
  877: JmpIfFalse: 884
  878: POP
  879: SV4: _lnum
  880: @
  881: SV2: _end
  882: @
  883: <=
  884: JmpIfFalse: 904
  885: SV5: _line
  886: @
  887: SV4: _lnum
  888: @
  889: SV4: _lnum
  890: @
  891: SV3: _pos
  892: @
  893: =
  894: JmpIfFalse: 897
  895: ">"
  896: JMP: 898
  897: " "
  898: "%s%3i: %s"
  899: FMTSTRING
  900: LV0: me
  901: @
  902: SWAP
  903: NOTIFY
  904: JMP: 863
  905: __FORPOP__
  906: SV3: _pos
  907: @
  908: SV0: _lines
  909: @
  910: ARRAY_COUNT
  911: >
  912: JmpIfFalse: 918
  913: ">"
  914: LV0: me
  915: @
  916: SWAP
  917: NOTIFY
  918: "Done."
  919: LV0: me
  920: @
  921: SWAP
  922: NOTIFY
  923: 0
  924: EXIT

  925: Function: lsedit::list_split_range (3 vars)
  926: {
  927: }
  928: ARRAY_MAKE
  929: SV3: _pfx
  930: !
  931: {
  932: }
  933: ARRAY_MAKE
  934: SV4: _mid
  935: !
  936: {
  937: }
  938: ARRAY_MAKE
  939: SV5: _sfx
  940: !
  941: SV0: _lines
  942: @
  943: FOREACH
  944: __FORITER__
  945: JmpIfFalse: 1003
  946: SV7: _line
  947: !
  948: SV6: _idx
  949: !
  950: SV6: _idx
  951: ++
  952: SV6: _idx
  953: @
  954: SV1: _start
  955: @
  956: <
  957: JmpIfFalse: 966
  958: SV3: _pfx
  959: @
  960: SV7: _line
  961: @
  962: SWAP
  963: ARRAY_APPENDITEM
  964: SV3: _pfx
  965: !
  966: SV6: _idx
  967: @
  968: SV1: _start
  969: @
  970: >=
  971: DUP
  972: JmpIfFalse: 979
  973: POP
  974: SV6: _idx
  975: @
  976: SV2: _end
  977: @
  978: <=
  979: JmpIfFalse: 988
  980: SV4: _mid
  981: @
  982: SV7: _line
  983: @
  984: SWAP
  985: ARRAY_APPENDITEM
  986: SV4: _mid
  987: !
  988: SV6: _idx
  989: @
  990: SV2: _end
  991: @
  992: >
  993: JmpIfFalse: 1002
  994: SV5: _sfx
  995: @
  996: SV7: _line
  997: @
  998: SWAP
  999: ARRAY_APPENDITEM
 1000: SV5: _sfx
 1001: !
 1002: JMP: 944
 1003: __FORPOP__
 1004: {
 1005: SV3: _pfx
 1006: @
 1007: SV4: _mid
 1008: @
 1009: SV5: _sfx
 1010: @
 1011: }
 1012: ARRAY_MAKE
 1013: EXIT

 1014: Function: lsedit::regexp_list_sub (3 vars)
 1015: 0
 1016: SV3: _changed
 1017: !
 1018: SV0: _lines
 1019: @
 1020: FOREACH
 1021: __FORITER__
 1022: JmpIfFalse: 1059
 1023: SV5: _line
 1024: !
 1025: SV4: _idx
 1026: !
 1027: SV5: _line
 1028: @
 1029: SV1: _fnd
 1030: @
 1031: SV2: _repl
 1032: @
 1033: 2
 1034: 1
 1035: BITOR
 1036: REGSUB
 1037: SV6: _newln
 1038: !
 1039: SV6: _newln
 1040: @
 1041: SV5: _line
 1042: @
 1043: STRCMP
 1044: JmpIfFalse: 1058
 1045: SV6: _newln
 1046: @
 1047: DUP
 1048: SV0: _lines
 1049: @
 1050: SV4: _idx
 1051: @
 1052: ARRAY_SETITEM
 1053: SV0: _lines
 1054: !
 1055: POP
 1056: SV3: _changed
 1057: ++
 1058: JMP: 1021
 1059: __FORPOP__
 1060: {
 1061: SV3: _changed
 1062: @
 1063: SV0: _lines
 1064: @
 1065: }
 1066: ARRAY_MAKE
 1067: EXIT

 1068: Function: lsedit::format_list (2 vars)
 1069: SV0: _lines
 1070: @
 1071: " "
 1072: ARRAY_JOIN
 1073: SV2: _txt
 1074: !
 1075: SV2: _txt
 1076: @
 1077: "  *"
 1078: " "
 1079: 2
 1080: REGSUB
 1081: SV2: _txt
 1082: !
 1083: {
 1084: }
 1085: ARRAY_MAKE
 1086: SV3: _out
 1087: !
 1088: SV2: _txt
 1089: @
 1090: STRLEN
 1091: SV1: _cols
 1092: @
 1093: >
 1094: JmpIfFalse: 1188
 1095: {
 1096: SV2: _txt
 1097: @
 1098: SV1: _cols
 1099: @
 1100: STRCUT
 1101: }
 1102: ARRAY_MAKE
 1103: DUP
 1104: DUP
 1105: 0
 1106: ARRAY_GETITEM
 1107: SV4: _pre
 1108: !
 1109: DUP
 1110: 1
 1111: ARRAY_GETITEM
 1112: SV2: _txt
 1113: !
 1114: POP
 1115: POP
 1116: {
 1117: SV4: _pre
 1118: @
 1119: " "
 1120: RSPLIT
 1121: }
 1122: ARRAY_MAKE
 1123: DUP
 1124: DUP
 1125: 0
 1126: ARRAY_GETITEM
 1127: SV4: _pre
 1128: !
 1129: DUP
 1130: 1
 1131: ARRAY_GETITEM
 1132: SV5: _rem
 1133: !
 1134: POP
 1135: POP
 1136: SV4: _pre
 1137: @
 1138: NOT
 1139: JmpIfFalse: 1148
 1140: SV5: _rem
 1141: @
 1142: SV4: _pre
 1143: !
 1144: ""
 1145: SV5: _rem
 1146: !
 1147: JMP: 1172
 1148: SV5: _rem
 1149: @
 1150: STRLEN
 1151: SV1: _cols
 1152: @
 1153: 2
 1154: /
 1155: >
 1156: JmpIfFalse: 1172
 1157: {
 1158: SV4: _pre
 1159: @
 1160: " "
 1161: SV5: _rem
 1162: @
 1163: }
 1164: ARRAY_MAKE
 1165: ""
 1166: ARRAY_JOIN
 1167: SV4: _pre
 1168: !
 1169: ""
 1170: SV5: _rem
 1171: !
 1172: SV3: _out
 1173: @
 1174: SV4: _pre
 1175: @
 1176: SWAP
 1177: ARRAY_APPENDITEM
 1178: SV3: _out
 1179: !
 1180: SV5: _rem
 1181: @
 1182: SV2: _txt
 1183: @
 1184: STRCAT
 1185: SV2: _txt
 1186: !
 1187: JMP: 1088
 1188: SV2: _txt
 1189: @
 1190: STRIPLEAD
 1191: STRIPTAIL
 1192: JmpIfFalse: 1201
 1193: SV3: _out
 1194: @
 1195: SV2: _txt
 1196: @
 1197: SWAP
 1198: ARRAY_APPENDITEM
 1199: SV3: _out
 1200: !
 1201: SV3: _out
 1202: @
 1203: EXIT

 1204: Function: lsedit::parse_lines (3 vars)
 1205: SV0: _str
 1206: @
 1207: ","
 1208: INSTR
 1209: JmpIfFalse: 1234
 1210: {
 1211: SV0: _str
 1212: @
 1213: ","
 1214: SPLIT
 1215: }
 1216: ARRAY_MAKE
 1217: SV0: _str
 1218: !
 1219: SV0: _str
 1220: @
 1221: 0
 1222: ARRAY_GETITEM
 1223: ATOI
 1224: SV1: _line1
 1225: !
 1226: SV0: _str
 1227: @
 1228: 1
 1229: ARRAY_GETITEM
 1230: ATOI
 1231: SV2: _line2
 1232: !
 1233: JMP: 1276
 1234: SV0: _str
 1235: @
 1236: " "
 1237: INSTR
 1238: JmpIfFalse: 1263
 1239: {
 1240: SV0: _str
 1241: @
 1242: " "
 1243: SPLIT
 1244: }
 1245: ARRAY_MAKE
 1246: SV0: _str
 1247: !
 1248: SV0: _str
 1249: @
 1250: 0
 1251: ARRAY_GETITEM
 1252: ATOI
 1253: SV1: _line1
 1254: !
 1255: SV0: _str
 1256: @
 1257: 1
 1258: ARRAY_GETITEM
 1259: ATOI
 1260: SV2: _line2
 1261: !
 1262: JMP: 1276
 1263: SV0: _str
 1264: @
 1265: STRIPLEAD
 1266: STRIPTAIL
 1267: JmpIfFalse: 1276
 1268: SV0: _str
 1269: @
 1270: ATOI
 1271: DUP
 1272: SV2: _line2
 1273: !
 1274: SV1: _line1
 1275: !
 1276: {
 1277: SV1: _line1
 1278: @
 1279: SV2: _line2
 1280: @
 1281: }
 1282: ARRAY_MAKE
 1283: EXIT

 1284: Function: lsedit__editor (3 vars)
 1285: 0
 1286: SV3: _line1
 1287: !
 1288: 0
 1289: SV4: _line2
 1290: !
 1291: LV10: lsedit::insert_pos
 1292: @
 1293: SV0: _lines
 1294: @
 1295: ARRAY_COUNT
 1296: ++
 1297: >
 1298: JmpIfFalse: 1313
 1299: SV0: _lines
 1300: @
 1301: ARRAY_COUNT
 1302: ++
 1303: LV10: lsedit::insert_pos
 1304: !
 1305: LV10: lsedit::insert_pos
 1306: @
 1307: "Inserting at line %i"
 1308: FMTSTRING
 1309: LV0: me
 1310: @
 1311: SWAP
 1312: NOTIFY
 1313: READ
 1314: SV5: _inln
 1315: !
 1316: SV5: _inln
 1317: @
 1318: "."
 1319: 1
 1320: STRNCMP
 1321: JmpIfFalse: 1335
 1322: SV5: _inln
 1323: @
 1324: SV0: _lines
 1325: @
 1326: LV10: lsedit::insert_pos
 1327: @
 1328: --
 1329: ARRAY_INSERTITEM
 1330: SV0: _lines
 1331: !
 1332: LV10: lsedit::insert_pos
 1333: ++
 1334: JMP: 1291
 1335: SV5: _inln
 1336: @
 1337: ".."
 1338: 2
 1339: STRNCMP
 1340: NOT
 1341: JmpIfFalse: 1366
 1342: {
 1343: SV5: _inln
 1344: @
 1345: 1
 1346: STRCUT
 1347: }
 1348: ARRAY_MAKE
 1349: 1
 1350: ARRAY_GETITEM
 1351: SV5: _inln
 1352: !
 1353: SV5: _inln
 1354: @
 1355: SV0: _lines
 1356: @
 1357: LV10: lsedit::insert_pos
 1358: @
 1359: --
 1360: ARRAY_INSERTITEM
 1361: SV0: _lines
 1362: !
 1363: LV10: lsedit::insert_pos
 1364: ++
 1365: JMP: 1291
 1366: {
 1367: SV5: _inln
 1368: @
 1369: " "
 1370: SPLIT
 1371: }
 1372: ARRAY_MAKE
 1373: DUP
 1374: DUP
 1375: 0
 1376: ARRAY_GETITEM
 1377: SV6: _cmd
 1378: !
 1379: DUP
 1380: 1
 1381: ARRAY_GETITEM
 1382: SV7: _cmdargs
 1383: !
 1384: POP
 1385: POP
 1386: 0
 1387: POP
 1388: SV6: _cmd
 1389: @
 1390: DUP
 1391: ".h"
 1392: STRCMP
 1393: NOT
 1394: JmpIfFalse: 1399
 1395: Addr:'#4'785
 1396: EXECUTE
 1397: POP
 1398: JMP: 2149
 1399: DUP
 1400: ".q"
 1401: STRCMP
 1402: NOT
 1403: JmpIfFalse: 1427
 1404: SV1: _obj
 1405: @
 1406: SV2: _prop
 1407: @
 1408: SV0: _lines
 1409: @
 1410: ARRAY_PUT_PROPLIST
 1411: "Saved."
 1412: LV0: me
 1413: @
 1414: SWAP
 1415: NOTIFY
 1416: {
 1417: SV6: _cmd
 1418: @
 1419: SV7: _cmdargs
 1420: @
 1421: SV0: _lines
 1422: @
 1423: }
 1424: ARRAY_MAKE
 1425: EXIT
 1426: JMP: 2149
 1427: DUP
 1428: ".x"
 1429: STRCMP
 1430: NOT
 1431: JmpIfFalse: 1448
 1432: "Aborting."
 1433: LV0: me
 1434: @
 1435: SWAP
 1436: NOTIFY
 1437: {
 1438: SV6: _cmd
 1439: @
 1440: SV7: _cmdargs
 1441: @
 1442: SV0: _lines
 1443: @
 1444: }
 1445: ARRAY_MAKE
 1446: EXIT
 1447: JMP: 2149
 1448: DUP
 1449: ".l"
 1450: STRCMP
 1451: NOT
 1452: JmpIfFalse: 1484
 1453: SV7: _cmdargs
 1454: @
 1455: 1
 1456: 999999
 1457: Addr:'#4'1204
 1458: EXECUTE
 1459: DUP
 1460: DUP
 1461: 0
 1462: ARRAY_GETITEM
 1463: SV3: _line1
 1464: !
 1465: DUP
 1466: 1
 1467: ARRAY_GETITEM
 1468: SV4: _line2
 1469: !
 1470: POP
 1471: POP
 1472: SV0: _lines
 1473: @
 1474: SV3: _line1
 1475: @
 1476: SV4: _line2
 1477: @
 1478: LV10: lsedit::insert_pos
 1479: @
 1480: Addr:'#4'859
 1481: EXECUTE
 1482: POP
 1483: JMP: 2149
 1484: DUP
 1485: ".i"
 1486: STRCMP
 1487: NOT
 1488: JmpIfFalse: 1548
 1489: SV7: _cmdargs
 1490: @
 1491: 1
 1492: 1
 1493: Addr:'#4'1204
 1494: EXECUTE
 1495: DUP
 1496: DUP
 1497: 0
 1498: ARRAY_GETITEM
 1499: SV3: _line1
 1500: !
 1501: DUP
 1502: 1
 1503: ARRAY_GETITEM
 1504: SV4: _line2
 1505: !
 1506: POP
 1507: POP
 1508: SV3: _line1
 1509: @
 1510: SV4: _line2
 1511: @
 1512: =
 1513: NOT
 1514: JmpIfFalse: 1521
 1515: "Usage: .i LINENUM"
 1516: LV0: me
 1517: @
 1518: SWAP
 1519: NOTIFY
 1520: JMP: 2149
 1521: SV3: _line1
 1522: @
 1523: LV10: lsedit::insert_pos
 1524: !
 1525: LV10: lsedit::insert_pos
 1526: @
 1527: SV0: _lines
 1528: @
 1529: ARRAY_COUNT
 1530: ++
 1531: >
 1532: JmpIfFalse: 1539
 1533: SV0: _lines
 1534: @
 1535: ARRAY_COUNT
 1536: ++
 1537: LV10: lsedit::insert_pos
 1538: !
 1539: LV10: lsedit::insert_pos
 1540: @
 1541: "Inserting at line %i"
 1542: FMTSTRING
 1543: LV0: me
 1544: @
 1545: SWAP
 1546: NOTIFY
 1547: JMP: 2149
 1548: DUP
 1549: ".s"
 1550: STRCMP
 1551: NOT
 1552: JmpIfFalse: 1727
 1553: SV7: _cmdargs
 1554: @
 1555: "/"
 1556: EXPLODE_ARRAY
 1557: SV7: _cmdargs
 1558: !
 1559: SV7: _cmdargs
 1560: @
 1561: ARRAY_COUNT
 1562: 3
 1563: =
 1564: JmpIfFalse: 1721
 1565: SV7: _cmdargs
 1566: @
 1567: DUP
 1568: DUP
 1569: 0
 1570: ARRAY_GETITEM
 1571: SV3: _line1
 1572: !
 1573: DUP
 1574: 1
 1575: ARRAY_GETITEM
 1576: SV8: _fnd
 1577: !
 1578: DUP
 1579: 2
 1580: ARRAY_GETITEM
 1581: SV9: _repl
 1582: !
 1583: POP
 1584: POP
 1585: SV3: _line1
 1586: @
 1587: 1
 1588: 999999
 1589: Addr:'#4'1204
 1590: EXECUTE
 1591: DUP
 1592: DUP
 1593: 0
 1594: ARRAY_GETITEM
 1595: SV3: _line1
 1596: !
 1597: DUP
 1598: 1
 1599: ARRAY_GETITEM
 1600: SV4: _line2
 1601: !
 1602: POP
 1603: POP
 1604: SV3: _line1
 1605: @
 1606: NOT
 1607: DUP
 1608: NOT
 1609: JmpIfFalse: 1614
 1610: POP
 1611: SV4: _line2
 1612: @
 1613: NOT
 1614: DUP
 1615: NOT
 1616: JmpIfFalse: 1621
 1617: POP
 1618: SV8: _fnd
 1619: @
 1620: NOT
 1621: JmpIfFalse: 1628
 1622: "Usage: .s [LINE[,LINE]]/FIND/REPLACE"
 1623: LV0: me
 1624: @
 1625: SWAP
 1626: NOTIFY
 1627: JMP: 2149
 1628: SV0: _lines
 1629: @
 1630: SV3: _line1
 1631: @
 1632: SV4: _line2
 1633: @
 1634: Addr:'#4'925
 1635: EXECUTE
 1636: DUP
 1637: DUP
 1638: 0
 1639: ARRAY_GETITEM
 1640: SV10: _pfx
 1641: !
 1642: DUP
 1643: 1
 1644: ARRAY_GETITEM
 1645: SV11: _subbed
 1646: !
 1647: DUP
 1648: 2
 1649: ARRAY_GETITEM
 1650: SV12: _sfx
 1651: !
 1652: POP
 1653: POP
 1654: SV11: _subbed
 1655: @
 1656: SV8: _fnd
 1657: @
 1658: SV9: _repl
 1659: @
 1660: Addr:'#4'1014
 1661: EXECUTE
 1662: DUP
 1663: DUP
 1664: 0
 1665: ARRAY_GETITEM
 1666: SV13: _changed
 1667: !
 1668: DUP
 1669: 1
 1670: ARRAY_GETITEM
 1671: SV11: _subbed
 1672: !
 1673: POP
 1674: POP
 1675: {
 1676: SV10: _pfx
 1677: @
 1678: SV11: _subbed
 1679: @
 1680: SV12: _sfx
 1681: @
 1682: }
 1683: ARRAY_MAKE
 1684: {
 1685: }
 1686: ARRAY_MAKE
 1687: SWAP
 1688: ARRAY_REVERSE
 1689: FOREACH
 1690: __FORITER__
 1691: JmpIfFalse: 1698
 1692: SWAP
 1693: POP
 1694: 0
 1695: SWAP
 1696: ARRAY_INSERTRANGE
 1697: JMP: 1690
 1698: __FORPOP__
 1699: SV0: _lines
 1700: !
 1701: SV13: _changed
 1702: @
 1703: "Changed %i lines."
 1704: FMTSTRING
 1705: LV0: me
 1706: @
 1707: SWAP
 1708: NOTIFY
 1709: SV0: _lines
 1710: @
 1711: SV3: _line1
 1712: @
 1713: SV4: _line2
 1714: @
 1715: LV10: lsedit::insert_pos
 1716: @
 1717: Addr:'#4'859
 1718: EXECUTE
 1719: POP
 1720: JMP: 1726
 1721: "Usage: .s [LINE[,LINE]]/FIND/REPLACE"
 1722: LV0: me
 1723: @
 1724: SWAP
 1725: NOTIFY
 1726: JMP: 2149
 1727: DUP
 1728: ".d"
 1729: STRCMP
 1730: NOT
 1731: JmpIfFalse: 1832
 1732: SV0: _lines
 1733: @
 1734: ARRAY_COUNT
 1735: SV14: _oldcount
 1736: !
 1737: SV7: _cmdargs
 1738: @
 1739: 0
 1740: 0
 1741: Addr:'#4'1204
 1742: EXECUTE
 1743: DUP
 1744: DUP
 1745: 0
 1746: ARRAY_GETITEM
 1747: SV3: _line1
 1748: !
 1749: DUP
 1750: 1
 1751: ARRAY_GETITEM
 1752: SV4: _line2
 1753: !
 1754: POP
 1755: POP
 1756: SV3: _line1
 1757: @
 1758: NOT
 1759: DUP
 1760: NOT
 1761: JmpIfFalse: 1766
 1762: POP
 1763: SV4: _line2
 1764: @
 1765: NOT
 1766: JmpIfFalse: 1772
 1767: "Usage: .d LINENUM [LINENUM]"
 1768: LV0: me
 1769: @
 1770: SWAP
 1771: NOTIFY
 1772: SV0: _lines
 1773: @
 1774: SV3: _line1
 1775: @
 1776: --
 1777: SV4: _line2
 1778: @
 1779: --
 1780: ARRAY_DELRANGE
 1781: SV0: _lines
 1782: !
 1783: SV14: _oldcount
 1784: @
 1785: SV0: _lines
 1786: @
 1787: ARRAY_COUNT
 1788: -
 1789: "Deleted %i lines."
 1790: FMTSTRING
 1791: LV0: me
 1792: @
 1793: SWAP
 1794: NOTIFY
 1795: LV10: lsedit::insert_pos
 1796: @
 1797: SV3: _line1
 1798: @
 1799: >=
 1800: JmpIfFalse: 1823
 1801: LV10: lsedit::insert_pos
 1802: @
 1803: SV4: _line2
 1804: @
 1805: >
 1806: JmpIfFalse: 1819
 1807: LV10: lsedit::insert_pos
 1808: @
 1809: SV4: _line2
 1810: @
 1811: SV3: _line1
 1812: @
 1813: -
 1814: ++
 1815: -
 1816: LV10: lsedit::insert_pos
 1817: !
 1818: JMP: 1823
 1819: SV3: _line1
 1820: @
 1821: LV10: lsedit::insert_pos
 1822: !
 1823: LV10: lsedit::insert_pos
 1824: @
 1825: "Inserting at line %i"
 1826: FMTSTRING
 1827: LV0: me
 1828: @
 1829: SWAP
 1830: NOTIFY
 1831: JMP: 2149
 1832: DUP
 1833: ".w"
 1834: STRCMP
 1835: NOT
 1836: JmpIfFalse: 1974
 1837: SV7: _cmdargs
 1838: @
 1839: "="
 1840: EXPLODE_ARRAY
 1841: SV7: _cmdargs
 1842: !
 1843: SV7: _cmdargs
 1844: @
 1845: NOT
 1846: JmpIfFalse: 1874
 1847: SV1: _obj
 1848: @
 1849: DUP
 1850: JmpIfFalse: 1854
 1851: POP
 1852: SV2: _prop
 1853: @
 1854: JmpIfFalse: 1868
 1855: SV1: _obj
 1856: @
 1857: SV2: _prop
 1858: @
 1859: SV0: _lines
 1860: @
 1861: ARRAY_PUT_PROPLIST
 1862: "Saved."
 1863: LV0: me
 1864: @
 1865: SWAP
 1866: NOTIFY
 1867: JMP: 1873
 1868: "Usage: .w OBJECT=LISTPROP"
 1869: LV0: me
 1870: @
 1871: SWAP
 1872: NOTIFY
 1873: JMP: 1973
 1874: SV7: _cmdargs
 1875: @
 1876: ARRAY_COUNT
 1877: 2
 1878: =
 1879: JmpIfFalse: 1968
 1880: SV7: _cmdargs
 1881: @
 1882: DUP
 1883: DUP
 1884: 0
 1885: ARRAY_GETITEM
 1886: SV15: _saveobj
 1887: !
 1888: DUP
 1889: 1
 1890: ARRAY_GETITEM
 1891: SV16: _savelist
 1892: !
 1893: POP
 1894: POP
 1895: SV15: _saveobj
 1896: @
 1897: MATCH
 1898: DUP
 1899: #-1
 1900: DBCMP
 1901: JmpIfFalse: 1906
 1902: LV0: me
 1903: @
 1904: "I don't see that here!"
 1905: NOTIFY
 1906: DUP
 1907: #-2
 1908: DBCMP
 1909: JmpIfFalse: 1914
 1910: LV0: me
 1911: @
 1912: "I don't know which one you mean!"
 1913: NOTIFY
 1914: DUP
 1915: #-3
 1916: DBCMP
 1917: JmpIfFalse: 1922
 1918: POP
 1919: LV0: me
 1920: @
 1921: GETLINK
 1922: DUP
 1923: OK?
 1924: JmpIfFalse: 1937
 1925: LV0: me
 1926: @
 1927: OVER
 1928: CONTROLS
 1929: NOT
 1930: JmpIfFalse: 1937
 1931: POP
 1932: #-1
 1933: LV0: me
 1934: @
 1935: "Permission denied."
 1936: NOTIFY
 1937: SV15: _saveobj
 1938: !
 1939: SV15: _saveobj
 1940: @
 1941: 0
 1942: <
 1943: JmpIfFalse: 1945
 1944: JMP: 2149
 1945: SV16: _savelist
 1946: @
 1947: NOT
 1948: JmpIfFalse: 1955
 1949: "Usage: .w [OBJECT=LISTPROP]"
 1950: LV0: me
 1951: @
 1952: SWAP
 1953: NOTIFY
 1954: JMP: 2149
 1955: SV15: _saveobj
 1956: @
 1957: SV16: _savelist
 1958: @
 1959: SV0: _lines
 1960: @
 1961: ARRAY_PUT_PROPLIST
 1962: "Saved."
 1963: LV0: me
 1964: @
 1965: SWAP
 1966: NOTIFY
 1967: JMP: 1973
 1968: "Usage: .w [OBJECT=LISTPROP]"
 1969: LV0: me
 1970: @
 1971: SWAP
 1972: NOTIFY
 1973: JMP: 2149
 1974: DUP
 1975: ".f"
 1976: STRCMP
 1977: NOT
 1978: JmpIfFalse: 2137
 1979: {
 1980: SV7: _cmdargs
 1981: @
 1982: "="
 1983: SPLIT
 1984: }
 1985: ARRAY_MAKE
 1986: DUP
 1987: DUP
 1988: 0
 1989: ARRAY_GETITEM
 1990: SV7: _cmdargs
 1991: !
 1992: DUP
 1993: 1
 1994: ARRAY_GETITEM
 1995: SV17: _cols
 1996: !
 1997: POP
 1998: POP
 1999: SV7: _cmdargs
 2000: @
 2001: 1
 2002: 999999
 2003: Addr:'#4'1204
 2004: EXECUTE
 2005: DUP
 2006: DUP
 2007: 0
 2008: ARRAY_GETITEM
 2009: SV3: _line1
 2010: !
 2011: DUP
 2012: 1
 2013: ARRAY_GETITEM
 2014: SV4: _line2
 2015: !
 2016: POP
 2017: POP
 2018: SV17: _cols
 2019: @
 2020: JmpIfFalse: 2025
 2021: SV17: _cols
 2022: @
 2023: ATOI
 2024: JMP: 2026
 2025: 75
 2026: SV17: _cols
 2027: !
 2028: SV17: _cols
 2029: @
 2030: NOT
 2031: DUP
 2032: NOT
 2033: JmpIfFalse: 2038
 2034: POP
 2035: SV3: _line1
 2036: @
 2037: NOT
 2038: DUP
 2039: NOT
 2040: JmpIfFalse: 2045
 2041: POP
 2042: SV4: _line2
 2043: @
 2044: NOT
 2045: JmpIfFalse: 2052
 2046: "Usage: .f [L1,[L2]][=LISTPROP]"
 2047: LV0: me
 2048: @
 2049: SWAP
 2050: NOTIFY
 2051: JMP: 2149
 2052: SV0: _lines
 2053: @
 2054: SV3: _line1
 2055: @
 2056: SV4: _line2
 2057: @
 2058: Addr:'#4'925
 2059: EXECUTE
 2060: DUP
 2061: DUP
 2062: 0
 2063: ARRAY_GETITEM
 2064: SV18: _pfx2
 2065: !
 2066: DUP
 2067: 1
 2068: ARRAY_GETITEM
 2069: SV19: _mid
 2070: !
 2071: DUP
 2072: 2
 2073: ARRAY_GETITEM
 2074: SV20: _sfx2
 2075: !
 2076: POP
 2077: POP
 2078: SV19: _mid
 2079: @
 2080: ARRAY_COUNT
 2081: SV21: _origcnt
 2082: !
 2083: SV19: _mid
 2084: @
 2085: SV17: _cols
 2086: @
 2087: Addr:'#4'1068
 2088: EXECUTE
 2089: SV19: _mid
 2090: !
 2091: {
 2092: SV18: _pfx2
 2093: @
 2094: SV19: _mid
 2095: @
 2096: SV20: _sfx2
 2097: @
 2098: }
 2099: ARRAY_MAKE
 2100: {
 2101: }
 2102: ARRAY_MAKE
 2103: SWAP
 2104: ARRAY_REVERSE
 2105: FOREACH
 2106: __FORITER__
 2107: JmpIfFalse: 2114
 2108: SWAP
 2109: POP
 2110: 0
 2111: SWAP
 2112: ARRAY_INSERTRANGE
 2113: JMP: 2106
 2114: __FORPOP__
 2115: SV0: _lines
 2116: !
 2117: SV21: _origcnt
 2118: @
 2119: "Formatted %i lines."
 2120: FMTSTRING
 2121: LV0: me
 2122: @
 2123: SWAP
 2124: NOTIFY
 2125: SV0: _lines
 2126: @
 2127: SV3: _line1
 2128: @
 2129: SV4: _line2
 2130: @
 2131: LV10: lsedit::insert_pos
 2132: @
 2133: Addr:'#4'859
 2134: EXECUTE
 2135: POP
 2136: JMP: 2149
 2137: {
 2138: SV6: _cmd
 2139: @
 2140: SV7: _cmdargs
 2141: @
 2142: SV0: _lines
 2143: @
 2144: }
 2145: ARRAY_MAKE
 2146: EXIT
 2147: JMP: 2149
 2148: JMP: 1387
 2149: POP
 2150: JMP: 1291
 2151: 0
 2152: EXIT

 2153: Function: lsedit__basic (1 vars)
 2154: Addr:'#4'0
 2155: EXECUTE
 2156: POP
 2157: ""
 2158: Addr:'#4'118
 2159: EXECUTE
 2160: POP
 2161: ""
 2162: {
 2163: }
 2164: ARRAY_MAKE
 2165: "obj=list"
 2166: Addr:'#4'130
 2167: EXECUTE
 2168: POP
 2169: SV0: _arg
 2170: @
 2171: Addr:'#4'464
 2172: EXECUTE
 2173: SV1: _opts
 2174: !
 2175: SV1: _opts
 2176: @
 2177: NOT
 2178: JmpIfFalse: 2181
 2179: 0
 2180: EXIT
 2181: SV1: _opts
 2182: @
 2183: "obj"
 2184: ARRAY_GETITEM
 2185: NOT
 2186: DUP
 2187: NOT
 2188: JmpIfFalse: 2195
 2189: POP
 2190: SV1: _opts
 2191: @
 2192: "list"
 2193: ARRAY_GETITEM
 2194: NOT
 2195: JmpIfFalse: 2201
 2196: Addr:'#4'334
 2197: EXECUTE
 2198: POP
 2199: 0
 2200: EXIT
 2201: SV1: _opts
 2202: @
 2203: "obj"
 2204: ARRAY_GETITEM
 2205: MATCH
 2206: DUP
 2207: #-1
 2208: DBCMP
 2209: JmpIfFalse: 2214
 2210: LV0: me
 2211: @
 2212: "I don't see that here!"
 2213: NOTIFY
 2214: DUP
 2215: #-2
 2216: DBCMP
 2217: JmpIfFalse: 2222
 2218: LV0: me
 2219: @
 2220: "I don't know which one you mean!"
 2221: NOTIFY
 2222: DUP
 2223: #-3
 2224: DBCMP
 2225: JmpIfFalse: 2230
 2226: POP
 2227: LV0: me
 2228: @
 2229: GETLINK
 2230: DUP
 2231: OK?
 2232: JmpIfFalse: 2245
 2233: LV0: me
 2234: @
 2235: OVER
 2236: CONTROLS
 2237: NOT
 2238: JmpIfFalse: 2245
 2239: POP
 2240: #-1
 2241: LV0: me
 2242: @
 2243: "Permission denied."
 2244: NOTIFY
 2245: SV2: _obj
 2246: !
 2247: SV2: _obj
 2248: @
 2249: 0
 2250: <
 2251: JmpIfFalse: 2254
 2252: 0
 2253: EXIT
 2254: 1
 2255: LV10: lsedit::insert_pos
 2256: !
 2257: SV2: _obj
 2258: @
 2259: SV1: _opts
 2260: @
 2261: "list"
 2262: ARRAY_GETITEM
 2263: ARRAY_GET_PROPLIST
 2264: SV5: _lines
 2265: !
 2266: SV5: _lines
 2267: @
 2268: 1
 2269: 999999
 2270: LV10: lsedit::insert_pos
 2271: @
 2272: Addr:'#4'859
 2273: EXECUTE
 2274: POP
 2275: SV5: _lines
 2276: @
 2277: SV2: _obj
 2278: @
 2279: SV1: _opts
 2280: @
 2281: "list"
 2282: ARRAY_GETITEM
 2283: Addr:'#4'1284
 2284: EXECUTE
 2285: DUP
 2286: DUP
 2287: 0
 2288: ARRAY_GETITEM
 2289: SV3: _cmd
 2290: !
 2291: DUP
 2292: 1
 2293: ARRAY_GETITEM
 2294: SV4: _args
 2295: !
 2296: DUP
 2297: 2
 2298: ARRAY_GETITEM
 2299: SV5: _lines
 2300: !
 2301: POP
 2302: POP
 2303: {
 2304: ".x"
 2305: ".q"
 2306: }
 2307: ARRAY_MAKE
 2308: SV3: _cmd
 2309: @
 2310: ARRAY_FINDVAL
 2311: JmpIfFalse: 2313
 2312: JMP: 2322
 2313: SV3: _cmd
 2314: @
 2315: "Unrecognized editor command '%s'."
 2316: FMTSTRING
 2317: LV0: me
 2318: @
 2319: SWAP
 2320: NOTIFY
 2321: JMP: 2275
 2322: {
 2323: SV3: _cmd
 2324: @
 2325: SV4: _args
 2326: @
 2327: SV5: _lines
 2328: @
 2329: }
 2330: ARRAY_MAKE
 2331: EXIT

 2332: Function: _main (1 vars)
 2333: Addr:'#4'777
 2334: EXECUTE
 2335: POP
 2336: SV0: _arg
 2337: @
 2338: Addr:'#4'2153
 2339: EXECUTE
 2340: EXIT

 2341: Function: __start (0 vars)
 2342: "me"
 2343: MATCH
 2344: LV0: me
 2345: !
 2346: LV0: me
 2347: @
 2348: LOCATION
 2349: LV1: loc
 2350: !
 2351: TRIG
 2352: LV2: trigger
 2353: !
 2354: ""
 2355: LV4: argparse::current_mode
 2356: !
 2357: {
 2358: }
 2359: ARRAY_MAKE
 2360: LV5: argparse::modes_list
 2361: !
 2362: {
 2363: }
 2364: 2
 2365: /
 2366: ARRAY_MAKE_DICT
 2367: LV6: argparse::flags_map
 2368: !
 2369: {
 2370: }
 2371: 2
 2372: /
 2373: ARRAY_MAKE_DICT
 2374: LV7: argparse::posargs_map
 2375: !
 2376: {
 2377: ""
 2378: "remainder"
 2379: }
 2380: 2
 2381: /
 2382: ARRAY_MAKE_DICT
 2383: LV8: argparse::remainder_map
 2384: !
 2385: {
 2386: }
 2387: ARRAY_MAKE
 2388: LV9: lsedit::help_lines
 2389: !
 2390: Addr:'#4'2332
 2391: EXECUTE
 2392: EXIT

#### Executing Tokens #################################
New process: pid=1
 2341: #4 line 550 ("") Function: __start (0 vars)
 2342: #4 line 551 ("") "me"
 2343: #4 line 551 ("", "me") MATCH
 2344: #4 line 551 ("", #5) LV0: me
 2345: #4 line 551 ("", #5, LV0) !
 2346: #4 line 551 ("") LV0: me
 2347: #4 line 551 ("", LV0) @
 2348: #4 line 551 ("", #5) LOCATION
 2349: #4 line 551 ("", #2) LV1: loc
 2350: #4 line 551 ("", #2, LV1) !
 2351: #4 line 551 ("") TRIG
 2352: #4 line 551 ("", #3) LV2: trigger
 2353: #4 line 551 ("", #3, LV2) !
 2354: #4 line 552 ("") ""
 2355: #4 line 552 ("", "") LV4: argparse::current_mode
 2356: #4 line 552 ("", "", LV4) !
 2357: #4 line 553 ("") {
 2358: #4 line 553 ("", Mark) }
 2359: #4 line 553 ("", 0) ARRAY_MAKE
 2360: #4 line 553 ("", 0[]) LV5: argparse::modes_list
 2361: #4 line 553 ("", 0[], LV5) !
 2362: #4 line 554 ("") {
 2363: #4 line 554 ("", Mark) }
 2364: #4 line 554 ("", 0) 2
 2365: #4 line 554 ("", 0, 2) /
 2366: #4 line 554 ("", 0) ARRAY_MAKE_DICT
 2367: #4 line 554 ("", 0{}) LV6: argparse::flags_map
 2368: #4 line 554 ("", 0{}, LV6) !
 2369: #4 line 555 ("") {
 2370: #4 line 555 ("", Mark) }
 2371: #4 line 555 ("", 0) 2
 2372: #4 line 555 ("", 0, 2) /
 2373: #4 line 555 ("", 0) ARRAY_MAKE_DICT
 2374: #4 line 555 ("", 0{}) LV7: argparse::posargs_map
 2375: #4 line 555 ("", 0{}, LV7) !
 2376: #4 line 556 ("") {
 2377: #4 line 556 ("", Mark) ""
 2378: #4 line 556 ("", Mark, "") "remainder"
 2379: #4 line 556 ("", Mark, "", "remainder") }
 2380: #4 line 556 ("", "", "remainder", 2) 2
 2381: #4 line 556 ("", "", "remainder", 2, 2) /
 2382: #4 line 556 ("", "", "remainder", 1) ARRAY_MAKE_DICT
 2383: #4 line 556 ("", 1{"": "remainder"}) LV8: argparse::remainder_map
 2384: #4 line 556 ("", 1{"": "remainder"}, LV8) !
 2385: #4 line 557 ("") {
 2386: #4 line 557 ("", Mark) }
 2387: #4 line 557 ("", 0) ARRAY_MAKE
 2388: #4 line 557 ("", 0[]) LV9: lsedit::help_lines
 2389: #4 line 557 ("", 0[], LV9) !
 2390: #4 line 558 ("") Addr:'#4'2332
 2391: #4 line 558 ("", Addr:'#4'2332) EXECUTE
 2332: #4 line 546 ("") Function: _main (1 vars)
 2333: #4 line 547 () Addr:'#4'777
 2334: #4 line 547 (Addr:'#4'777) EXECUTE
  777: #4 line 207 () Function: lsedit__init_help (0 vars)
  778: #4 line 208 () {
  779: #4 line 208 (Mark) }
  780: #4 line 208 (0) ARRAY_MAKE
  781: #4 line 208 (0[]) LV9: lsedit::help_lines
  782: #4 line 208 (0[], LV9) !
  783: #4 line 209 () 0
  784: #4 line 210 (0) EXIT
 2335: #4 line 547 (0) POP
 2336: #4 line 548 () SV0: _arg
 2337: #4 line 548 (SV0) @
 2338: #4 line 548 ("") Addr:'#4'2153
 2339: #4 line 548 ("", Addr:'#4'2153) EXECUTE
 2153: #4 line 510 ("") Function: lsedit__basic (1 vars)
 2154: #4 line 512 () Addr:'#4'0
 2155: #4 line 512 (Addr:'#4'0) EXECUTE
    0: #4 line 12 () Function: argparse::init (0 vars)
    1: #4 line 13 () ""
    2: #4 line 13 ("") LV4: argparse::current_mode
    3: #4 line 13 ("", LV4) !
    4: #4 line 14 () {
    5: #4 line 14 (Mark) }
    6: #4 line 14 (0) ARRAY_MAKE
    7: #4 line 14 (0[]) LV5: argparse::modes_list
    8: #4 line 14 (0[], LV5) !
    9: #4 line 15 () {
   10: #4 line 15 (Mark) }
   11: #4 line 15 (0) 2
   12: #4 line 15 (0, 2) /
   13: #4 line 15 (0) ARRAY_MAKE_DICT
   14: #4 line 15 (0{}) LV6: argparse::flags_map
   15: #4 line 15 (0{}, LV6) !
   16: #4 line 16 () {
   17: #4 line 16 (Mark) }
   18: #4 line 16 (0) 2
   19: #4 line 16 (0, 2) /
   20: #4 line 16 (0) ARRAY_MAKE_DICT
   21: #4 line 16 (0{}) LV7: argparse::posargs_map
   22: #4 line 16 (0{}, LV7) !
   23: #4 line 17 () {
   24: #4 line 17 (Mark) ""
   25: #4 line 17 (Mark, "") "remainder"
   26: #4 line 17 (Mark, "", "remainder") }
   27: #4 line 17 ("", "remainder", 2) 2
   28: #4 line 17 ("", "remainder", 2, 2) /
   29: #4 line 17 ("", "remainder", 1) ARRAY_MAKE_DICT
   30: #4 line 17 (1{"": "remainder"}) LV8: argparse::remainder_map
   31: #4 line 17 (1{"": "remainder"}, LV8) !
   32: #4 line 18 () 0
   33: #4 line 19 (0) EXIT
 2156: #4 line 512 (0) POP
 2157: #4 line 513 () ""
 2158: #4 line 513 ("") Addr:'#4'118
 2159: #4 line 513 ("", Addr:'#4'118) EXECUTE
  118: #4 line 41 ("") Function: argparse::set_mode (1 vars)
  119: #4 line 42 () SV0: _name
  120: #4 line 42 (SV0) @
  121: #4 line 42 ("") TOLOWER
  122: #4 line 42 ("") SV0: _name
  123: #4 line 42 ("", SV0) !
  124: #4 line 43 () SV0: _name
  125: #4 line 43 (SV0) @
  126: #4 line 43 ("") LV4: argparse::current_mode
  127: #4 line 43 ("", LV4) !
  128: #4 line 44 () 0
  129: #4 line 45 (0) EXIT
 2160: #4 line 513 (0) POP
 2161: #4 line 514 () ""
 2162: #4 line 514 ("") {
 2163: #4 line 514 ("", Mark) }
 2164: #4 line 514 ("", 0) ARRAY_MAKE
 2165: #4 line 514 ("", 0[]) "obj=list"
 2166: #4 line 514 ("", 0[], "obj=list") Addr:'#4'130
 2167: #4 line 514 ("", 0[], "obj=list", Addr:'#4'130) EXECUTE
  130: #4 line 46 ("", 0[], "obj=list") Function: argparse::add_mode (3 vars)
  131: #4 line 48 () SV0: _name
  132: #4 line 48 (SV0) @
  133: #4 line 48 ("") TOLOWER
  134: #4 line 48 ("") SV0: _name
  135: #4 line 48 ("", SV0) !
  136: #4 line 49 () LV5: argparse::modes_list
  137: #4 line 49 (LV5) @
  138: #4 line 49 (0[]) SV0: _name
  139: #4 line 49 (0[], SV0) @
  140: #4 line 49 (0[], "") SWAP
  141: #4 line 49 ("", 0[]) ARRAY_APPENDITEM
  142: #4 line 49 (1[""]) LV5: argparse::modes_list
  143: #4 line 49 (1[""], LV5) !
  144: #4 line 50 () {
  145: #4 line 50 (Mark) }
  146: #4 line 50 (0) ARRAY_MAKE
  147: #4 line 50 (0[]) DUP
  148: #4 line 51 (0[], 0[]) LV6: argparse::flags_map
  149: #4 line 51 (0[], 0[], LV6) @
  150: #4 line 51 (0[], 0[], 0{}) SV0: _name
  151: #4 line 51 (0[], 0[], 0{}, SV0) @
  152: #4 line 51 (0[], 0[], 0{}, "") ARRAY_SETITEM
  153: #4 line 51 (0[], 1{"": 0[]}) LV6: argparse::flags_map
  154: #4 line 51 (0[], 1{"": 0[]}, LV6) !
  155: #4 line 51 (0[]) POP
  156: #4 line 52 () {
  157: #4 line 52 (Mark) }
  158: #4 line 52 (0) ARRAY_MAKE
  159: #4 line 52 (0[]) DUP
  160: #4 line 53 (0[], 0[]) LV7: argparse::posargs_map
  161: #4 line 53 (0[], 0[], LV7) @
  162: #4 line 53 (0[], 0[], 0{}) SV0: _name
  163: #4 line 53 (0[], 0[], 0{}, SV0) @
  164: #4 line 53 (0[], 0[], 0{}, "") ARRAY_SETITEM
  165: #4 line 53 (0[], 1{"": 0[]}) LV7: argparse::posargs_map
  166: #4 line 53 (0[], 1{"": 0[]}, LV7) !
  167: #4 line 53 (0[]) POP
  168: #4 line 54 () SV1: _flags
  169: #4 line 54 (SV1) @
  170: #4 line 54 (0[]) FOREACH
  171: #4 line 55 () __FORITER__
  172: #4 line 55 (0) JmpIfFalse: 213
  213: #4 line 62 () __FORPOP__
  214: #4 line 63 () SV0: _name
  215: #4 line 63 (SV0) @
  216: #4 line 63 ("") SV2: _posargs
  217: #4 line 63 ("", SV2) @
  218: #4 line 63 ("", "obj=list") Addr:'#4'34
  219: #4 line 63 ("", "obj=list", Addr:'#4'34) EXECUTE
   34: #4 line 20 ("", "obj=list") Function: argparse::parse_posargs (2 vars)
   35: #4 line 23 () {
   36: #4 line 23 (Mark) SV1: _posargs
   37: #4 line 23 (Mark, SV1) @
   38: #4 line 23 (Mark, "obj=list") "^([a-z0-9_]*)([^a-z0-9_])(.*)$"
   39: #4 line 23 (Mark, "obj=list", "^([a-z0-9_]*)([^a-z0-9_])(.*)$") 1
   40: #4 line 23 (Mark, "obj=list", "^([a-z0-9_]*)([^a-z0-9_])(.*)$", 1) REGEXP
   41: #4 line 23 (Mark, 4["obj=list", "obj", "=", "list"], 4[2[0, 8], 2[0, 3], 2[3, 4], 2[4, 8]]) }
   42: #4 line 23 (4["obj=list", "obj", "=", "list"], 4[2[0, 8], 2[0, 3], 2[3, 4], 2[4, 8]], 2) ARRAY_MAKE
   43: #4 line 23 (2[4["obj=list", "obj", "=", "list"], 4[2[0, 8], 2[0, 3], 2[3, 4], 2[4, 8]]]) 0
   44: #4 line 23 (2[4["obj=list", "obj", "=", "list"], 4[2[0, 8], 2[0, 3], 2[3, 4], 2[4, 8]]], 0) ARRAY_GETITEM
   45: #4 line 24 (4["obj=list", "obj", "=", "list"]) SV2: _tok
   46: #4 line 24 (4["obj=list", "obj", "=", "list"], SV2) !
   47: #4 line 25 () SV2: _tok
   48: #4 line 25 (SV2) @
   49: #4 line 25 (4["obj=list", "obj", "=", "list"]) JmpIfFalse: 102
   50: #4 line 26 () LV7: argparse::posargs_map
   51: #4 line 26 (LV7) @
   52: #4 line 26 (1{"": 0[]}) SV0: _mode
   53: #4 line 26 (1{"": 0[]}, SV0) @
   54: #4 line 26 (1{"": 0[]}, "") ARRAY_GETITEM
   55: #4 line 26 (0[]) NOT
   56: #4 line 26 (1) JmpIfFalse: 69
   57: #4 line 27 () {
   58: #4 line 27 (Mark) }
   59: #4 line 27 (0) ARRAY_MAKE
   60: #4 line 27 (0[]) DUP
   61: #4 line 28 (0[], 0[]) LV7: argparse::posargs_map
   62: #4 line 28 (0[], 0[], LV7) @
   63: #4 line 28 (0[], 0[], 1{"": 0[]}) SV0: _mode
   64: #4 line 28 (0[], 0[], 1{"": 0[]}, SV0) @
   65: #4 line 28 (0[], 0[], 1{"": 0[]}, "") ARRAY_SETITEM
   66: #4 line 28 (0[], 1{"": 0[]}) LV7: argparse::posargs_map
   67: #4 line 28 (0[], 1{"": 0[]}, LV7) !
   68: #4 line 28 (0[]) POP
   69: #4 line 30 () LV7: argparse::posargs_map
   70: #4 line 30 (LV7) @
   71: #4 line 30 (1{"": 0[]}) SV0: _mode
   72: #4 line 30 (1{"": 0[]}, SV0) @
   73: #4 line 30 (1{"": 0[]}, "") OVER
   74: #4 line 30 (1{"": 0[]}, "", 1{"": 0[]}) OVER
   75: #4 line 30 (1{"": 0[]}, "", 1{"": 0[]}, "") ARRAY_GETITEM
   76: #4 line 31 (1{"": 0[]}, "", 0[]) {
   77: #4 line 31 (1{"": 0[]}, "", 0[], Mark) SV2: _tok
   78: #4 line 31 (1{"": 0[]}, "", 0[], Mark, SV2) @
   79: #4 line 31 (1{"": 0[]}, "", 0[], Mark, 4["obj=list", "obj", "=", "list"]) 1
   80: #4 line 31 (1{"": 0[]}, "", 0[], Mark, 4["obj=list", "obj", "=", "list"], 1) ARRAY_GETITEM
   81: #4 line 31 (1{"": 0[]}, "", 0[], Mark, "obj") TOLOWER
   82: #4 line 31 (1{"": 0[]}, "", 0[], Mark, "obj") SV2: _tok
   83: #4 line 31 (1{"": 0[]}, "", 0[], Mark, "obj", SV2) @
   84: #4 line 31 (1{"": 0[]}, "", 0[], Mark, "obj", 4["obj=list", "obj", "=", "list"]) 2
   85: #4 line 31 (1{"": 0[]}, "", 0[], Mark, "obj", 4["obj=list", "obj", "=", "list"], 2) ARRAY_GETITEM
   86: #4 line 31 (1{"": 0[]}, "", 0[], Mark, "obj", "=") }
   87: #4 line 31 (1{"": 0[]}, "", 0[], "obj", "=", 2) ARRAY_MAKE
   88: #4 line 31 (1{"": 0[]}, "", 0[], 2["obj", "="]) SWAP
   89: #4 line 31 (1{"": 0[]}, "", 2["obj", "="], 0[]) ARRAY_APPENDITEM
   90: #4 line 31 (1{"": 0[]}, "", 1[2["obj", "="]]) ROT
   91: #4 line 31 ("", 1[2["obj", "="]], 1{"": 0[]}) ROT
   92: #4 line 31 (1[2["obj", "="]], 1{"": 0[]}, "") ARRAY_SETITEM
   93: #4 line 31 (1{"": 1[2["obj", "="]]}) LV7: argparse::posargs_map
   94: #4 line 31 (1{"": 1[2["obj", "="]]}, LV7) !
   95: #4 line 32 () SV2: _tok
   96: #4 line 32 (SV2) @
   97: #4 line 32 (4["obj=list", "obj", "=", "list"]) 3
   98: #4 line 32 (4["obj=list", "obj", "=", "list"], 3) ARRAY_GETITEM
   99: #4 line 32 ("list") SV1: _posargs
  100: #4 line 32 ("list", SV1) !
  101: #4 line 33 () JMP: 115
  115: #4 line 38 () JMP: 35
   35: #4 line 23 () {
   36: #4 line 23 (Mark) SV1: _posargs
   37: #4 line 23 (Mark, SV1) @
   38: #4 line 23 (Mark, "list") "^([a-z0-9_]*)([^a-z0-9_])(.*)$"
   39: #4 line 23 (Mark, "list", "^([a-z0-9_]*)([^a-z0-9_])(.*)$") 1
   40: #4 line 23 (Mark, "list", "^([a-z0-9_]*)([^a-z0-9_])(.*)$", 1) REGEXP
   41: #4 line 23 (Mark, 0[], 0[]) }
   42: #4 line 23 (0[], 0[], 2) ARRAY_MAKE
   43: #4 line 23 (2[0[], 0[]]) 0
   44: #4 line 23 (2[0[], 0[]], 0) ARRAY_GETITEM
   45: #4 line 24 (0[]) SV2: _tok
   46: #4 line 24 (0[], SV2) !
   47: #4 line 25 () SV2: _tok
   48: #4 line 25 (SV2) @
   49: #4 line 25 (0[]) JmpIfFalse: 102
  102: #4 line 34 () SV1: _posargs
  103: #4 line 34 (SV1) @
  104: #4 line 34 ("list") TOLOWER
  105: #4 line 34 ("list") DUP
  106: #4 line 35 ("list", "list") LV8: argparse::remainder_map
  107: #4 line 35 ("list", "list", LV8) @
  108: #4 line 35 ("list", "list", 1{"": "remainder"}) SV0: _mode
  109: #4 line 35 ("list", "list", 1{"": "remainder"}, SV0) @
  110: #4 line 35 ("list", "list", 1{"": "remainder"}, "") ARRAY_SETITEM
  111: #4 line 35 ("list", 1{"": "list"}) LV8: argparse::remainder_map
  112: #4 line 35 ("list", 1{"": "list"}, LV8) !
  113: #4 line 35 ("list") POP
  114: #4 line 36 () JMP: 116
  116: #4 line 39 () 0
  117: #4 line 40 (0) EXIT
  220: #4 line 63 (0) POP
  221: #4 line 64 () 0
  222: #4 line 65 (0) EXIT
 2168: #4 line 514 (0) POP
 2169: #4 line 515 () SV0: _arg
 2170: #4 line 515 (SV0) @
 2171: #4 line 515 ("") Addr:'#4'464
 2172: #4 line 515 ("", Addr:'#4'464) EXECUTE
  464: #4 line 124 ("") Function: argparse::parse (1 vars)
  465: #4 line 127 () {
  466: #4 line 127 (Mark) }
  467: #4 line 127 (0) 2
  468: #4 line 127 (0, 2) /
  469: #4 line 127 (0) ARRAY_MAKE_DICT
  470: #4 line 127 (0{}) SV4: _opts
  471: #4 line 127 (0{}, SV4) !
  472: #4 line 128 () 0
  473: #4 line 128 (0) SV5: _mode_given
  474: #4 line 128 (0, SV5) !
  475: #4 line 130 () SV0: _line
  476: #4 line 130 (SV0) @
  477: #4 line 130 ("") "#"
  478: #4 line 130 ("", "#") STRINGPFX
  479: #4 line 131 (0) JmpIfFalse: 687
  687: #4 line 189 () SV5: _mode_given
  688: #4 line 189 (SV5) @
  689: #4 line 189 (0) 1
  690: #4 line 189 (0, 1) >
  691: #4 line 189 (0) JmpIfFalse: 704
  704: #4 line 194 () LV7: argparse::posargs_map
  705: #4 line 194 (LV7) @
  706: #4 line 194 (1{"": 1[2["obj", "="]]}) LV4: argparse::current_mode
  707: #4 line 194 (1{"": 1[2["obj", "="]]}, LV4) @
  708: #4 line 194 (1{"": 1[2["obj", "="]]}, "") ARRAY_GETITEM
  709: #4 line 194 (1[2["obj", "="]]) FOREACH
  710: #4 line 195 () __FORITER__
  711: #4 line 195 (0, 2["obj", "="], 1) JmpIfFalse: 749
  712: #4 line 195 (0, 2["obj", "="]) SV9: _posarg
  713: #4 line 195 (0, 2["obj", "="], SV9) !
  714: #4 line 195 (0) POP
  715: #4 line 196 () {
  716: #4 line 196 (Mark) SV0: _line
  717: #4 line 196 (Mark, SV0) @
  718: #4 line 196 (Mark, "") SV9: _posarg
  719: #4 line 196 (Mark, "", SV9) @
  720: #4 line 196 (Mark, "", 2["obj", "="]) 1
  721: #4 line 196 (Mark, "", 2["obj", "="], 1) ARRAY_GETITEM
  722: #4 line 196 (Mark, "", "=") SPLIT
  723: #4 line 196 (Mark, "", "") }
  724: #4 line 196 ("", "", 2) ARRAY_MAKE
  725: #4 line 196 (2["", ""]) SV1: _parts
  726: #4 line 196 (2["", ""], SV1) !
  727: #4 line 197 () SV1: _parts
  728: #4 line 197 (SV1) @
  729: #4 line 197 (2["", ""]) 0
  730: #4 line 197 (2["", ""], 0) ARRAY_GETITEM
  731: #4 line 197 ("") DUP
  732: #4 line 197 ("", "") SV4: _opts
  733: #4 line 197 ("", "", SV4) @
  734: #4 line 197 ("", "", 0{}) SV9: _posarg
  735: #4 line 197 ("", "", 0{}, SV9) @
  736: #4 line 197 ("", "", 0{}, 2["obj", "="]) 0
  737: #4 line 197 ("", "", 0{}, 2["obj", "="], 0) ARRAY_GETITEM
  738: #4 line 197 ("", "", 0{}, "obj") ARRAY_SETITEM
  739: #4 line 197 ("", 1{"obj": ""}) SV4: _opts
  740: #4 line 197 ("", 1{"obj": ""}, SV4) !
  741: #4 line 197 ("") POP
  742: #4 line 198 () SV1: _parts
  743: #4 line 198 (SV1) @
  744: #4 line 198 (2["", ""]) 1
  745: #4 line 198 (2["", ""], 1) ARRAY_GETITEM
  746: #4 line 198 ("") SV0: _line
  747: #4 line 198 ("", SV0) !
  748: #4 line 199 () JMP: 710
  710: #4 line 195 () __FORITER__
  711: #4 line 195 (0) JmpIfFalse: 749
  749: #4 line 199 () __FORPOP__
  750: #4 line 200 () SV0: _line
  751: #4 line 200 (SV0) @
  752: #4 line 200 ("") DUP
  753: #4 line 201 ("", "") SV4: _opts
  754: #4 line 201 ("", "", SV4) @
  755: #4 line 201 ("", "", 1{"obj": ""}) LV8: argparse::remainder_map
  756: #4 line 201 ("", "", 1{"obj": ""}, LV8) @
  757: #4 line 201 ("", "", 1{"obj": ""}, 1{"": "list"}) LV4: argparse::current_mode
  758: #4 line 201 ("", "", 1{"obj": ""}, 1{"": "list"}, LV4) @
  759: #4 line 201 ("", "", 1{"obj": ""}, 1{"": "list"}, "") ARRAY_GETITEM
  760: #4 line 201 ("", "", 1{"obj": ""}, "list") ARRAY_SETITEM
  761: #4 line 201 ("", 2{"list": "", "obj": ""}) SV4: _opts
  762: #4 line 201 ("", 2{"list": "", "obj": ""}, SV4) !
  763: #4 line 201 ("") POP
  764: #4 line 202 () LV4: argparse::current_mode
  765: #4 line 202 (LV4) @
  766: #4 line 202 ("") DUP
  767: #4 line 202 ("", "") SV4: _opts
  768: #4 line 202 ("", "", SV4) @
  769: #4 line 202 ("", "", 2{"list": "", "obj": ""}) "mode"
  770: #4 line 202 ("", "", 2{"list": "", "obj": ""}, "mode") ARRAY_SETITEM
  771: #4 line 202 ("", 3{"list": "", "mode": "", "obj": ""}) SV4: _opts
  772: #4 line 202 ("", 3{"list": "", "mode": "", "obj": ""}, SV4) !
  773: #4 line 202 ("") POP
  774: #4 line 203 () SV4: _opts
  775: #4 line 203 (SV4) @
  776: #4 line 204 (3{"list": "", "mode": "", "obj": ""}) EXIT
 2173: #4 line 515 (3{"list": "", "mode": "", "obj": ""}) SV1: _opts
 2174: #4 line 515 (3{"list": "", "mode": "", "obj": ""}, SV1) !
 2175: #4 line 516 () SV1: _opts
 2176: #4 line 516 (SV1) @
 2177: #4 line 516 (3{"list": "", "mode": "", "obj": ""}) NOT
 2178: #4 line 516 (0) JmpIfFalse: 2181
 2181: #4 line 517 () SV1: _opts
 2182: #4 line 517 (SV1) @
 2183: #4 line 517 (3{"list": "", "mode": "", "obj": ""}) "obj"
 2184: #4 line 517 (3{"list": "", "mode": "", "obj": ""}, "obj") ARRAY_GETITEM
 2185: #4 line 517 ("") NOT
 2186: #4 line 518 (1) DUP
 2187: #4 line 518 (1, 1) NOT
 2188: #4 line 518 (1, 0) JmpIfFalse: 2195
 2195: #4 line 518 (1) JmpIfFalse: 2201
 2196: #4 line 519 () Addr:'#4'334
 2197: #4 line 519 (Addr:'#4'334) EXECUTE
  334: #4 line 100 () Function: argparse::show_usage (0 vars)
  335: #4 line 103 () TRIG
  336: #4 line 103 (#3) NAME
  337: #4 line 103 ("test") ";"
  338: #4 line 103 ("test", ";") SPLIT
  339: #4 line 103 ("test", "") POP
  340: #4 line 103 ("test") STRIPLEAD
  341: #4 line 103 ("test") STRIPTAIL
  342: #4 line 103 ("test") SV0: _cmd
  343: #4 line 103 ("test", SV0) !
  344: #4 line 104 () "Usage:"
  345: #4 line 104 ("Usage:") LV0: me
  346: #4 line 104 ("Usage:", LV0) @
  347: #4 line 104 ("Usage:", #5) SWAP
  348: #4 line 104 (#5, "Usage:") NOTIFY
NOTIFY: Usage:
  349: #4 line 105 () LV5: argparse::modes_list
  350: #4 line 105 (LV5) @
  351: #4 line 105 (1[""]) FOREACH
  352: #4 line 106 () __FORITER__
  353: #4 line 106 (0, "", 1) JmpIfFalse: 461
  354: #4 line 106 (0, "") SV1: _mode
  355: #4 line 106 (0, "", SV1) !
  356: #4 line 106 (0) POP
  357: #4 line 107 () {
  358: #4 line 107 (Mark) }
  359: #4 line 107 (0) ARRAY_MAKE
  360: #4 line 107 (0[]) LV6: argparse::flags_map
  361: #4 line 107 (0[], LV6) @
  362: #4 line 107 (0[], 1{"": 0[]}) SV1: _mode
  363: #4 line 107 (0[], 1{"": 0[]}, SV1) @
  364: #4 line 107 (0[], 1{"": 0[]}, "") ARRAY_GETITEM
  365: #4 line 107 (0[], 0[]) FOREACH
  366: #4 line 108 (0[]) __FORITER__
  367: #4 line 108 (0[], 0) JmpIfFalse: 383
  383: #4 line 110 (0[]) __FORPOP__
  384: #4 line 110 (0[]) SV2: _flags
  385: #4 line 110 (0[], SV2) !
  386: #4 line 111 () {
  387: #4 line 111 (Mark) }
  388: #4 line 111 (0) ARRAY_MAKE
  389: #4 line 111 (0[]) LV7: argparse::posargs_map
  390: #4 line 111 (0[], LV7) @
  391: #4 line 111 (0[], 1{"": 1[2["obj", "="]]}) SV1: _mode
  392: #4 line 111 (0[], 1{"": 1[2["obj", "="]]}, SV1) @
  393: #4 line 111 (0[], 1{"": 1[2["obj", "="]]}, "") ARRAY_GETITEM
  394: #4 line 111 (0[], 1[2["obj", "="]]) FOREACH
  395: #4 line 112 (0[]) __FORITER__
  396: #4 line 112 (0[], 0, 2["obj", "="], 1) JmpIfFalse: 417
  397: #4 line 112 (0[], 0, 2["obj", "="]) SV5: _posarg
  398: #4 line 112 (0[], 0, 2["obj", "="], SV5) !
  399: #4 line 112 (0[], 0) POP
  400: #4 line 113 (0[]) {
  401: #4 line 113 (0[], Mark) SV5: _posarg
  402: #4 line 113 (0[], Mark, SV5) @
  403: #4 line 113 (0[], Mark, 2["obj", "="]) 0
  404: #4 line 113 (0[], Mark, 2["obj", "="], 0) ARRAY_GETITEM
  405: #4 line 113 (0[], Mark, "obj") TOUPPER
  406: #4 line 113 (0[], Mark, "OBJ") SV5: _posarg
  407: #4 line 113 (0[], Mark, "OBJ", SV5) @
  408: #4 line 113 (0[], Mark, "OBJ", 2["obj", "="]) 1
  409: #4 line 113 (0[], Mark, "OBJ", 2["obj", "="], 1) ARRAY_GETITEM
  410: #4 line 113 (0[], Mark, "OBJ", "=") }
  411: #4 line 113 (0[], "OBJ", "=", 2) ARRAY_MAKE
  412: #4 line 113 (0[], 2["OBJ", "="]) ""
  413: #4 line 113 (0[], 2["OBJ", "="], "") ARRAY_JOIN
  414: #4 line 114 (0[], "OBJ=") SWAP
  415: #4 line 114 ("OBJ=", 0[]) ARRAY_APPENDITEM
  416: #4 line 115 (1["OBJ="]) JMP: 395
  395: #4 line 112 (1["OBJ="]) __FORITER__
  396: #4 line 112 (1["OBJ="], 0) JmpIfFalse: 417
  417: #4 line 115 (1["OBJ="]) __FORPOP__
  418: #4 line 115 (1["OBJ="]) SV4: _posargs
  419: #4 line 115 (1["OBJ="], SV4) !
  420: #4 line 116 () LV8: argparse::remainder_map
  421: #4 line 116 (LV8) @
  422: #4 line 116 (1{"": "list"}) SV1: _mode
  423: #4 line 116 (1{"": "list"}, SV1) @
  424: #4 line 116 (1{"": "list"}, "") ARRAY_GETITEM
  425: #4 line 116 ("list") TOUPPER
  426: #4 line 117 ("LIST") SV4: _posargs
  427: #4 line 117 ("LIST", SV4) @
  428: #4 line 117 ("LIST", 1["OBJ="]) ""
  429: #4 line 117 ("LIST", 1["OBJ="], "") ARRAY_JOIN
  430: #4 line 117 ("LIST", "OBJ=") SV2: _flags
  431: #4 line 117 ("LIST", "OBJ=", SV2) @
  432: #4 line 117 ("LIST", "OBJ=", 0[]) JmpIfFalse: 435
  435: #4 line 117 ("LIST", "OBJ=") ""
  436: #4 line 118 ("LIST", "OBJ=", "") SV2: _flags
  437: #4 line 118 ("LIST", "OBJ=", "", SV2) @
  438: #4 line 118 ("LIST", "OBJ=", "", 0[]) " "
  439: #4 line 118 ("LIST", "OBJ=", "", 0[], " ") ARRAY_JOIN
  440: #4 line 118 ("LIST", "OBJ=", "", "") SV1: _mode
  441: #4 line 118 ("LIST", "OBJ=", "", "", SV1) @
  442: #4 line 118 ("LIST", "OBJ=", "", "", "") SV1: _mode
  443: #4 line 118 ("LIST", "OBJ=", "", "", "", SV1) @
  444: #4 line 118 ("LIST", "OBJ=", "", "", "", "") JmpIfFalse: 447
  447: #4 line 118 ("LIST", "OBJ=", "", "", "") ""
  448: #4 line 119 ("LIST", "OBJ=", "", "", "", "") SV0: _cmd
  449: #4 line 119 ("LIST", "OBJ=", "", "", "", "", SV0) @
  450: #4 line 119 ("LIST", "OBJ=", "", "", "", "", "test") "%s %s%s %s%s%s%s"
  451: #4 line 119 ("LIST", "OBJ=", "", "", "", "", "test", "%s %s%s %s%s%s%s") FMTSTRING
  452: #4 line 119 ("test  OBJ=LIST") SV6: _line
  453: #4 line 119 ("test  OBJ=LIST", SV6) !
  454: #4 line 120 () SV6: _line
  455: #4 line 120 (SV6) @
  456: #4 line 120 ("test  OBJ=LIST") LV0: me
  457: #4 line 120 ("test  OBJ=LIST", LV0) @
  458: #4 line 120 ("test  OBJ=LIST", #5) SWAP
  459: #4 line 120 (#5, "test  OBJ=LIST") NOTIFY
NOTIFY: test  OBJ=LIST
  460: #4 line 121 () JMP: 352
  352: #4 line 106 () __FORITER__
  353: #4 line 106 (0) JmpIfFalse: 461
  461: #4 line 121 () __FORPOP__
  462: #4 line 122 () 0
  463: #4 line 123 (0) EXIT
 2198: #4 line 519 (0) POP
 2199: #4 line 520 () 0
 2200: #4 line 520 (0) EXIT
 2340: #4 line 549 (0) EXIT
 2392: #4 line 559 (0) EXIT
Process exited: pid=1
Program exited.
Execution completed in 518 steps.

