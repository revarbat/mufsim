#### Compiling MUF Code to Tokens #####################

#### Showing Compiled Tokens ##########################
    0: Function: main (0 vars)
    1: {
    2: }
    3: ARRAY_MAKE
    4: ARRAY_LAST
    5: POP
    6: POP
    7: {
    8: 5
    9: 4
   10: 3
   11: }
   12: ARRAY_MAKE
   13: ARRAY_LAST
   14: POP
   15: POP
   16: {
   17: }
   18: 2
   19: /
   20: ARRAY_MAKE_DICT
   21: ARRAY_LAST
   22: POP
   23: POP
   24: {
   25: "c"
   26: 5
   27: "b"
   28: 4
   29: "a"
   30: 3
   31: }
   32: 2
   33: /
   34: ARRAY_MAKE_DICT
   35: ARRAY_LAST
   36: POP
   37: POP
   38: EXIT

#### Executing Tokens #################################
    0: line 1 ("") Function: main (0 vars)
    1: line 2 ("") {
    2: line 2 ("", Mark) }
    3: line 2 ("", 0) ARRAY_MAKE
    4: line 2 ("", 0[]) ARRAY_LAST
    5: line 2 ("", 0, 0) POP
    6: line 2 ("", 0) POP
    7: line 3 ("") {
    8: line 3 ("", Mark) 5
    9: line 3 ("", Mark, 5) 4
   10: line 3 ("", Mark, 5, 4) 3
   11: line 3 ("", Mark, 5, 4, 3) }
   12: line 3 ("", 5, 4, 3, 3) ARRAY_MAKE
   13: line 3 ("", 3[5, 4, 3]) ARRAY_LAST
   14: line 3 ("", 2, 1) POP
   15: line 3 ("", 2) POP
   16: line 4 ("") {
   17: line 4 ("", Mark) }
   18: line 4 ("", 0) 2
   19: line 4 ("", 0, 2) /
   20: line 4 ("", 0) ARRAY_MAKE_DICT
   21: line 4 ("", 0{}) ARRAY_LAST
   22: line 4 ("", 0, 0) POP
   23: line 4 ("", 0) POP
   24: line 5 ("") {
   25: line 5 ("", Mark) "c"
   26: line 5 ("", Mark, "c") 5
   27: line 5 ("", Mark, "c", 5) "b"
   28: line 5 ("", Mark, "c", 5, "b") 4
   29: line 5 ("", Mark, "c", 5, "b", 4) "a"
   30: line 5 ("", Mark, "c", 5, "b", 4, "a") 3
   31: line 5 ("", Mark, "c", 5, "b", 4, "a", 3) }
   32: line 5 ("", "c", 5, "b", 4, "a", 3, 6) 2
   33: line 5 ("", "c", 5, "b", 4, "a", 3, 6, 2) /
   34: line 5 ("", "c", 5, "b", 4, "a", 3, 3) ARRAY_MAKE_DICT
   35: line 5 ("", 3{"a": 3, "b": 4, "c": 5}) ARRAY_LAST
   36: line 5 ("", "c", 1) POP
   37: line 5 ("", "c") POP
   38: line 6 ("") EXIT
Execution completed in 39 steps.

