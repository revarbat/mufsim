#### Compiling MUF Program cmd-test(#4) ###############

#### Showing Tokens for cmd-test(#4) ##################
    0: Function: main (0 vars)
    1: {
    2: 3
    3: 4
    4: 5
    5: 6
    6: 7
    7: 8
    8: }
    9: ARRAY_MAKE
   10: {
   11: 2
   12: 4
   13: }
   14: ARRAY_MAKE
   15: ARRAY_EXTRACT
   16: {
   17: "a"
   18: 2
   19: "b"
   20: 6
   21: "c"
   22: 9
   23: "d"
   24: 2
   25: "e"
   26: 3
   27: }
   28: 2
   29: /
   30: ARRAY_MAKE_DICT
   31: {
   32: "d"
   33: "b"
   34: }
   35: ARRAY_MAKE
   36: ARRAY_EXTRACT
   37: EXIT

#### Executing Tokens #################################
    0: #4 line 1 ("") Function: main (0 vars)
    1: #4 line 2 ("") {
    2: #4 line 2 ("", Mark) 3
    3: #4 line 2 ("", Mark, 3) 4
    4: #4 line 2 ("", Mark, 3, 4) 5
    5: #4 line 2 ("", Mark, 3, 4, 5) 6
    6: #4 line 2 ("", Mark, 3, 4, 5, 6) 7
    7: #4 line 2 ("", Mark, 3, 4, 5, 6, 7) 8
    8: #4 line 2 ("", Mark, 3, 4, 5, 6, 7, 8) }
    9: #4 line 2 ("", 3, 4, 5, 6, 7, 8, 6) ARRAY_MAKE
   10: #4 line 3 ("", 6[3, 4, 5, 6, 7, 8]) {
   11: #4 line 3 ("", 6[3, 4, 5, 6, 7, 8], Mark) 2
   12: #4 line 3 ("", 6[3, 4, 5, 6, 7, 8], Mark, 2) 4
   13: #4 line 3 ("", 6[3, 4, 5, 6, 7, 8], Mark, 2, 4) }
   14: #4 line 3 ("", 6[3, 4, 5, 6, 7, 8], 2, 4, 2) ARRAY_MAKE
   15: #4 line 4 ("", 6[3, 4, 5, 6, 7, 8], 2[2, 4]) ARRAY_EXTRACT
   16: #4 line 5 ("", 2{2: 5, 4: 7}) {
   17: #4 line 5 ("", 2{2: 5, 4: 7}, Mark) "a"
   18: #4 line 5 ("", 2{2: 5, 4: 7}, Mark, "a") 2
   19: #4 line 5 ("", 2{2: 5, 4: 7}, Mark, "a", 2) "b"
   20: #4 line 5 ("", 2{2: 5, 4: 7}, Mark, "a", 2, "b") 6
   21: #4 line 5 ("", 2{2: 5, 4: 7}, Mark, "a", 2, "b", 6) "c"
   22: #4 line 5 ("", 2{2: 5, 4: 7}, Mark, "a", 2, "b", 6, "c") 9
   23: #4 line 5 ("", 2{2: 5, 4: 7}, Mark, "a", 2, "b", 6, "c", 9) "d"
   24: #4 line 5 ("", 2{2: 5, 4: 7}, Mark, "a", 2, "b", 6, "c", 9, "d") 2
   25: #4 line 5 ("", 2{2: 5, 4: 7}, Mark, "a", 2, "b", 6, "c", 9, "d", 2) "e"
   26: #4 line 5 ("", 2{2: 5, 4: 7}, Mark, "a", 2, "b", 6, "c", 9, "d", 2, "e") 3
   27: #4 line 5 ("", 2{2: 5, 4: 7}, Mark, "a", 2, "b", 6, "c", 9, "d", 2, "e", 3) }
   28: #4 line 5 ("", 2{2: 5, 4: 7}, "a", 2, "b", 6, "c", 9, "d", 2, "e", 3, 10) 2
   29: #4 line 5 ("", 2{2: 5, 4: 7}, "a", 2, "b", 6, "c", 9, "d", 2, "e", 3, 10, 2) /
   30: #4 line 5 ("", 2{2: 5, 4: 7}, "a", 2, "b", 6, "c", 9, "d", 2, "e", 3, 5) ARRAY_MAKE_DICT
   31: #4 line 6 ("", 2{2: 5, 4: 7}, 5{"a": 2, "b": 6, "c": 9, "d": 2, "e": 3}) {
   32: #4 line 6 ("", 2{2: 5, 4: 7}, 5{"a": 2, "b": 6, "c": 9, "d": 2, "e": 3}, Mark) "d"
   33: #4 line 6 ("", 2{2: 5, 4: 7}, 5{"a": 2, "b": 6, "c": 9, "d": 2, "e": 3}, Mark, "d") "b"
   34: #4 line 6 ("", 2{2: 5, 4: 7}, 5{"a": 2, "b": 6, "c": 9, "d": 2, "e": 3}, Mark, "d", "b") }
   35: #4 line 6 ("", 2{2: 5, 4: 7}, 5{"a": 2, "b": 6, "c": 9, "d": 2, "e": 3}, "d", "b", 2) ARRAY_MAKE
   36: #4 line 7 ("", 2{2: 5, 4: 7}, 5{"a": 2, "b": 6, "c": 9, "d": 2, "e": 3}, 2["d", "b"]) ARRAY_EXTRACT
   37: #4 line 8 ("", 2{2: 5, 4: 7}, 2{"b": 6, "d": 2}) EXIT
Program exited.
Execution completed in 38 steps.

